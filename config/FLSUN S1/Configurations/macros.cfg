#  __  __
# |  \/  |
# | \  / | __ _  ___ _ __ ___  ___
# | |\/| |/ _` |/ __| '__/ _ \/ __|
# | |  | | (_| | (__| | | (_) \__ \
# |_|  |_|\__,_|\___|_|  \___/|___/
#
# Macros Configurations
# For FLSUN S1 Open Source Edition
# Version: 2.2


##################################################
# Start / End Gcodes
##################################################

[gcode_macro _START_GCODE]
description: Start Gcodes
gcode:
  {% set X_MIN = params.X_MIN|float %}
  {% set X_MAX = params.X_MAX|float %}
  {% set Y_MIN = params.Y_MIN|float %}
  {% set Y_MAX = params.Y_MAX|float %}
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  {% set HOTEND_TEMP = params.HOTEND_TEMP|default(140)|float %}
  {% if printer.save_variables.variables.adaptive_bed_mesh == 1 %}
    SET_GCODE_OFFSET Z=0
    BED_MESH_CLEAR
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
    G21
    G90
    M82
    G28
    M204 S200
    {% if printer.save_variables.variables.adaptive_bed_heating == 1 %}
      {% if X_MIN > 100 or X_MAX > 100 or Y_MIN > 100 or Y_MAX > 100 or X_MIN < -100 or X_MAX < -100 or Y_MIN < -100 or Y_MAX < -100 %}
        M190 S{BED_TEMP}
      {% else %}
        M190 S{BED_TEMP} B0
        SET_GCODE_VARIABLE MACRO=M140 VARIABLE=inner_bed_only VALUE=1
      {% endif %}
    {% else %}
      M190 S{BED_TEMP}
    {% endif %}
    M109 S140
    RESPOND MSG="Starting Adaptive Bed Mesh..."
    G1 X0 Y0 Z50 F4200
    BED_MESH_CALIBRATE ADAPTIVE=1 ADAPTIVE_MARGIN=5
    BED_MESH_PROFILE SAVE=adaptive_mesh
    BED_MESH_PROFILE LOAD=adaptive_mesh
    G1 X0 Y0 Z50 F4200
    G1 X-160 Y0 Z1 F4000
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=1
    M109 S{HOTEND_TEMP}
    G92 E0
    G3 X0 Y-160 I160 J0 Z0.3 E30 F2000
    G1 Z2 F2000
    G92 E0
  {% elif printer.save_variables.variables.full_bed_mesh == 1 %}
    SET_GCODE_OFFSET Z=0
    BED_MESH_CLEAR
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
    G21
    G90
    M82
    G28
    M204 S200
    M190 S{BED_TEMP}
    M109 S140
    RESPOND MSG="Starting Full Bed Mesh..."
    G1 X0 Y0 Z50 F4200
    BED_MESH_CALIBRATE
    BED_MESH_PROFILE SAVE=full_mesh
    BED_MESH_PROFILE LOAD=full_mesh
    G1 X0 Y0 Z50 F4200
    G1 X-160 Y0 Z1 F4000
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=1
    M109 S{HOTEND_TEMP}
    G92 E0
    G3 X0 Y-160 I160 J0 Z0.3 E30 F2000
    G1 Z2 F2000
    G92 E0
  {% elif printer.save_variables.variables.adaptive_bed_mesh == 0 and printer.save_variables.variables.full_bed_mesh == 0 and (not printer['bed_mesh'].profile_name) %}
    SET_GCODE_OFFSET Z=0
    BED_MESH_CLEAR
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
    G21
    G90
    M82
    G28
    M204 S200
    M190 S{BED_TEMP}
    M109 S140
    RESPOND MSG="Starting Full Bed Mesh..."
    G1 X0 Y0 Z50 F4200
    BED_MESH_CALIBRATE
    BED_MESH_PROFILE SAVE=default
    BED_MESH_PROFILE LOAD=default
    G1 X0 Y0 Z50 F4200
    G1 X-160 Y0 Z1 F4000
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=1
    M109 S{HOTEND_TEMP}
    G92 E0
    G3 X0 Y-160 I160 J0 Z0.3 E30 F2000
    G1 Z2 F2000
    G92 E0
  {% else %}
    G21
    G90
    M82
    G28
    BED_MESH_PROFILE LOAD=default
    {% if printer.save_variables.variables.adaptive_bed_heating == 1 %}
      {% if X_MIN > 100 or X_MAX > 100 or Y_MIN > 100 or Y_MAX > 100 or X_MIN < -100 or X_MAX < -100 or Y_MIN < -100 or Y_MAX < -100 %}
        M190 S{BED_TEMP}
      {% else %}
        M190 S{BED_TEMP} B0
        SET_GCODE_VARIABLE MACRO=M140 VARIABLE=inner_bed_only VALUE=1
      {% endif %}
    {% else %}
      M190 S{BED_TEMP}
    {% endif %}
    M104 S{HOTEND_TEMP}
    G1 Z150 F6000
    G1 X-160 Y0 Z1 F4000
    M109 S{HOTEND_TEMP}
    G92 E0
    G3 X0 Y-160 I160 J0 Z0.3 E30 F2000
    G1 Z2 F2000
    G92 E0
  {% endif %}
 
[gcode_macro _END_GCODE]
description: End Gcodes
gcode:
  M107
  M104 S0
  SET_GCODE_VARIABLE MACRO=M140 VARIABLE=inner_bed_only VALUE=0
  M140 S0
  G92 E0
  G91
  G1 E-1 F2100
  G1 Z+0.5 F6000
  G28

[gcode_macro _START_PRINT]
description: Necessary Start Gcodes
gcode:
  _RELAY_ON
  _CLEAR_POWER_LOSS_PARAMS
  SET_TMC_CURRENT STEPPER=extruder CURRENT={printer.configfile.settings['tmc5160 extruder'].run_current}
  SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity}
  SET_VELOCITY_LIMIT ACCEL={printer.configfile.settings.printer.max_accel}
  SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={printer.configfile.settings.printer.square_corner_velocity}
  SET_VELOCITY_LIMIT MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
  CLEAR_PAUSE
  _SCREEN_LED_ON R=0 O=0 W=1

[gcode_macro _END_PRINT]
description: Necessary End Gcodes
gcode:
  _CLEAR_POWER_LOSS_PARAMS
  SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
  M106 S128
  UPDATE_DELAYED_GCODE ID=WAIT_COOLING DURATION=60
  {% if printer.save_variables.variables.adaptive_bed_mesh == 1 %}
    BED_MESH_PROFILE REMOVE=adaptive_mesh
  {% elif printer.save_variables.variables.full_bed_mesh == 1 %}
    BED_MESH_PROFILE REMOVE=full_mesh
  {% endif %}


##################################################
# Pause / Resume / Cancel Print
##################################################

[gcode_macro PAUSE]
description: Pause Print
rename_existing: PAUSE_BASE
gcode:
  {% if printer.print_stats.state == "printing" %}
    _SAVE_POWER_LOSS_PARAMS
    {% set x = params.X|default(0) %}
    {% set y = params.Y|default(-140) %}
    {% set z = params.Z|default(10)|float %}
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z >= max_z - 50 %}
      {% set x = 0 %}
      {% set y = 0 %}
    {% endif %}
    {% if act_z < (max_z - lift_z) %}
      {% set z_safe = act_z + lift_z %}
    {% else %}
      {% set z_safe = max_z %}
    {% endif %}
    {% set fan_speed = printer.fan.speed|float %}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=fan_speed VALUE={fan_speed}
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-1 F2100
    {% else %}
      RESPOND TYPE=error MSG="Extruder not hot enought!"
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G90
      G1 X{x} Y{y} Z{z_safe} F6000
    {% else %}
      RESPOND TYPE=error MSG="Printer not homed!"
    {% endif %}
    {% set nozzle_temp = printer.extruder.target|float %}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=nozzle_temp VALUE={nozzle_temp}
    M104 S90
    M106 S128
    M400
  {% endif %}

[gcode_macro RESUME]
description: Resume Print
rename_existing: RESUME_BASE
variable_fan_speed: 0
variable_nozzle_temp: 0
variable_m600_state: 0
gcode:
  {% if printer.print_stats.state == "paused" %}
    M106 S0
    M109 S{nozzle_temp}
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY) %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    {% if printer['gcode_macro RESUME'].m600_state == 0 %}
      G91
      {% if nozzle_temp >= 180 %}
        G1 E1 F2100
      {% else %}
        RESPOND TYPE=error MSG="Extruder not hot enought!"
      {% endif %}
      G90
      M400
    {% endif %}
    _CLEAR_POWER_LOSS_PARAMS
    {% set fan_speed = fan_speed * 255 / printer.configfile.settings['fan'].max_power %}
    M106 S{fan_speed}
    {% if printer['gcode_macro RESUME'].m600_state == 1 %}
      SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=m600_state VALUE=0
    {% endif %}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=fan_speed VALUE=0
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=nozzle_temp VALUE=0
    RESPOND MSG="Resuming printing..."
    {% if printer.configfile.settings['neopixel chamber_led'] %}
      _NEOPIXELS_WHITE
    {% endif %}
    _SCREEN_LED_ON R=0 O=0 W=1
    RESUME_BASE {get_params}
  {% endif %}

[gcode_macro CANCEL_PRINT]
description: Cancel Print
rename_existing: CANCEL_PRINT_BASE
gcode:
  _CLEAR_POWER_LOSS_PARAMS
  {% set x = params.X|default(0) %}
  {% set y = params.Y|default(0) %}
  {% set z = params.Z|default(10)|float %}
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% set lift_z = z|abs %}
  {% if act_z >= max_z - 50 %}
    {% set x = 0 %}
    {% set y = 0 %}
  {% endif %}
  {% if act_z < (max_z - lift_z) %}
    {% set z_safe = act_z + lift_z %}
  {% else %}
    {% set z_safe = max_z %}
  {% endif %}
  {% if printer['gcode_macro RESUME'].m600_state == 1 %}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=m600_state VALUE=0
  {% endif %}
  M106 S0
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
  SET_FAN_SPEED FAN=chamber_fan SPEED=0.0
  M106 S128
  UPDATE_DELAYED_GCODE ID=WAIT_COOLING DURATION=60
  G90
  G1 Z{z_safe} F6000
  M400
  G1 X{x} Y{y} F6000
  M400
  G28


##################################################
# Filament / Color Change
##################################################

[gcode_macro M600]
description: Filament Change
gcode:
  _SAVE_POWER_LOSS_PARAMS
  {% set x = params.X|default(0) %}
  {% set y = params.Y|default(-140) %}
  {% set z = params.Z|default(10)|float %}
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% set lift_z = z|abs %}
  {% if act_z >= max_z - 50 %}
    {% set x = 0 %}
    {% set y = 0 %}
  {% endif %}
  {% if act_z < (max_z - lift_z) %}
    {% set z_safe = act_z + lift_z %}
  {% else %}
    {% set z_safe = max_z %}
  {% endif %}
  SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=m600_state VALUE=1
  {% set nozzle_temp = printer.extruder.target|float %}
  SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=nozzle_temp VALUE={nozzle_temp}
  {% set fan_speed = printer.fan.speed|float %}
  SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=fan_speed VALUE={fan_speed}
  RESPOND MSG="Print paused for filament change! Load new filament before resume!"
  {% if printer.configfile.settings['neopixel chamber_led'] %}
    _NEOPIXELS_RED
  {% endif %}
  _SCREEN_LED_ON R=1 O=0 W=0
  PAUSE_BASE
  G91
  {% if nozzle_temp >= 180 %}
    G1 E-1 F2100
  {% else %}
    RESPOND TYPE=error MSG="Extruder not hot enought!"
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G90
    G1 X{x} Y{y} Z{z_safe} F6000
  {% else %}
    RESPOND TYPE=error MSG="Printer not homed!"
  {% endif %}
  M107

[gcode_macro _PAUSE_AFTER_DISTANCE]
description: Pause printing after a certain length of extruded filament
variable_end_d: 0
variable_was_paused: 0
gcode:
  {% set d_start = printer.print_stats.filament_used|float %}
  {% set d_end = (d_start + params.D|float)|float %}
  SET_GCODE_VARIABLE MACRO=_PAUSE_AFTER_DISTANCE VARIABLE=end_d VALUE={d_end}
  RESPOND MSG="Pause will be done when {d_end|round(2)}mm of filament have been extruded."
  UPDATE_DELAYED_GCODE ID=PAUSE_AT_DISTANCE DURATION=1

[delayed_gcode PAUSE_AT_DISTANCE]
initial_duration: 0
gcode:
  {% if printer.print_stats.state == "printing" %}
    {% set was_paused = printer["gcode_macro _PAUSE_AFTER_DISTANCE"].was_paused %}
    {% if was_paused %}
      {% if printer["filament_switch_sensor _filament_sensor"].filament_detected %}
        RESPOND MSG="Filament replaced! Pause canceled."
        SET_GCODE_VARIABLE MACRO=_PAUSE_AFTER_DISTANCE VARIABLE=was_paused value=0
        UPDATE_DELAYED_GCODE ID=PAUSE_AT_DISTANCE DURATION=0
      {% else %}
        RESPOND MSG="Filament not replaced... Pause will be done."
        SET_GCODE_VARIABLE MACRO=_PAUSE_AFTER_DISTANCE VARIABLE=was_paused value=0
        UPDATE_DELAYED_GCODE ID=PAUSE_AT_DISTANCE DURATION=1
      {% endif %}
    {% else %}
      {% set d_current = printer.print_stats.filament_used|float %}
      {% if d_current < printer["gcode_macro _PAUSE_AFTER_DISTANCE"].end_d %}
        UPDATE_DELAYED_GCODE ID=PAUSE_AT_DISTANCE DURATION=1
      {% else %}
        UPDATE_DELAYED_GCODE ID=PAUSE_AT_DISTANCE DURATION=0
        M600
      {% endif %}
    {% endif %}
  {% else %}
    {% if printer.print_stats.state == "paused" %}
      SET_GCODE_VARIABLE MACRO=_PAUSE_AFTER_DISTANCE VARIABLE=was_paused value=1
      UPDATE_DELAYED_GCODE ID=PAUSE_AT_DISTANCE DURATION=1
    {% else %}
      RESPOND MSG="Filament not replaced... Pause canceled because print was stopped."
      SET_GCODE_VARIABLE MACRO=_PAUSE_AFTER_DISTANCE VARIABLE=was_paused value=0
      UPDATE_DELAYED_GCODE ID=PAUSE_AT_DISTANCE DURATION=0
    {% endif %}
  {% endif %}


##################################################
# Load / Unload Filament
##################################################

[gcode_macro LOAD_FILAMENT]
description: Load Filament
gcode:
  {% set SPEED_FACTOR = printer.gcode_move.speed_factor|float %}
  {% set EXTRUDE_FACTOR = printer.gcode_move.extrude_factor|float %}
  {% set HOTEND_TEMP = params.HOTEND_TEMP|default(240)|float %}
  {% if printer.configfile.settings['neopixel chamber_led'] %}
    _NEOPIXELS_HOTEND
  {% endif %}
  {% if printer.extruder.temperature < HOTEND_TEMP - 5 %}
    M109 S{HOTEND_TEMP}
  {% endif %}
  M104 S{HOTEND_TEMP}
  RESPOND MSG="Loading filament..."
  G91
  M220 S100
  M221 S100
  G1 E40 F1500
  G1 E30 F500
  M400
  M220 S{SPEED_FACTOR*100}
  M221 S{EXTRUDE_FACTOR*100}
  G90
  {% if printer.configfile.settings['neopixel chamber_led'] %}
    _NEOPIXELS_WHITE
  {% endif %}
  SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
  RESPOND MSG="Loading done!"
  
[gcode_macro UNLOAD_FILAMENT]
description: Unload Filament
gcode:
  RESPOND TYPE=command MSG="action:prompt_begin Unload Filament"
  RESPOND TYPE=command MSG="action:prompt_text TO PREVENT EXTRUDER CLOG, FOLLOW THESE STEPS:"
  RESPOND TYPE=command MSG="action:prompt_text 1. Unclip the PTFE tube and press the lower spring clip of the PTFE connector."
  RESPOND TYPE=command MSG="action:prompt_text 2. Remove the PTFE tube from the PTFE connector."
  RESPOND TYPE=command MSG="action:prompt_text 3. Cut the filament and press UNLOAD button."
  RESPOND TYPE=command MSG="action:prompt_footer_button CANCEL|RESPOND TYPE=command MSG=action:prompt_end|warning"
  RESPOND TYPE=command MSG="action:prompt_footer_button UNLOAD(RETRACT)|_UNLOAD_FILAMENT_RETRACT|primary"
  RESPOND TYPE=command MSG="action:prompt_footer_button UNLOAD(PURGE)|_UNLOAD_FILAMENT_PURGE|primary"
  RESPOND TYPE=command MSG="action:prompt_show"
  
[gcode_macro _UNLOAD_FILAMENT_PURGE]
description: Unload Filament with Purge
gcode:
  {% set SPEED_FACTOR = printer.gcode_move.speed_factor|float %}
  {% set EXTRUDE_FACTOR = printer.gcode_move.extrude_factor|float %}
  {% set HOTEND_TEMP = params.HOTEND_TEMP|default(240)|float %}
  {% if printer.configfile.settings['neopixel chamber_led'] %}
    _NEOPIXELS_HOTEND
  {% endif %}
  {% if printer.extruder.temperature < HOTEND_TEMP - 5 %}
    M109 S{HOTEND_TEMP}
  {% endif %}
  M104 S{HOTEND_TEMP}
  RESPOND MSG="Unloading filament..."
  G91
  M220 S100
  M221 S100
  G1 E100 F1500
  G1 E60 F500
  M400
  M220 S{SPEED_FACTOR*100}
  M221 S{EXTRUDE_FACTOR*100}
  G90
  {% if printer.configfile.settings['neopixel chamber_led'] %}
    _NEOPIXELS_WHITE
  {% endif %}
  SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
  RESPOND MSG="Unloading done!"

[gcode_macro _UNLOAD_FILAMENT_RETRACT]
description: Unload Filament with Retract
gcode:
  {% set SPEED_FACTOR = printer.gcode_move.speed_factor|float %}
  {% set EXTRUDE_FACTOR = printer.gcode_move.extrude_factor|float %}
  {% set HOTEND_TEMP = params.HOTEND_TEMP|default(240)|float %}
  {% if printer.configfile.settings['neopixel chamber_led'] %}
    _NEOPIXELS_HOTEND
  {% endif %}
  {% if printer.extruder.temperature < HOTEND_TEMP - 5 %}
    M109 S{HOTEND_TEMP}
  {% endif %}
  M104 S{HOTEND_TEMP}
  RESPOND MSG="Unloading filament..."
  G91
  M220 S100
  M221 S100
  G1 E10 F500
  G4 P1000
  G1 E-20 F2000
  G1 E-55 F1500
  M400
  M220 S{SPEED_FACTOR*100}
  M221 S{EXTRUDE_FACTOR*100}
  G90
  {% if printer.configfile.settings['neopixel chamber_led'] %}
    _NEOPIXELS_WHITE
  {% endif %}
  SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
  RESPOND MSG="Unloading done!"

[gcode_macro _KS_LOAD_FILAMENT]
description: Load Filament for KlipperScreen
gcode:
  {% set SPEED_FACTOR = printer.gcode_move.speed_factor|float %}
  {% set EXTRUDE_FACTOR = printer.gcode_move.extrude_factor|float %}
  G91
  M220 S100
  M221 S100
  G1 E40 F1500
  G1 E30 F500
  M400
  M220 S{SPEED_FACTOR*100}
  M221 S{EXTRUDE_FACTOR*100}
  G90
  SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0

[gcode_macro _KS_UNLOAD_FILAMENT_PURGE]
description: Unload Filament with Purge for KlipperScreen
gcode:
  {% set SPEED_FACTOR = printer.gcode_move.speed_factor|float %}
  {% set EXTRUDE_FACTOR = printer.gcode_move.extrude_factor|float %}
  G91
  M220 S100
  M221 S100
  G1 E100 F1500
  G1 E60 F500
  M400
  M220 S{SPEED_FACTOR*100}
  M221 S{EXTRUDE_FACTOR*100}
  G90
  SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0

[gcode_macro _KS_UNLOAD_FILAMENT_RETRACT]
description: Unload Filament with Retract for KlipperScreen
gcode:
  {% set SPEED_FACTOR = printer.gcode_move.speed_factor|float %}
  {% set EXTRUDE_FACTOR = printer.gcode_move.extrude_factor|float %}
  G91
  M220 S100
  M221 S100
  G1 E10 F500
  G4 P1000
  G1 E-20 F2000
  G1 E-55 F1500
  M400
  M220 S{SPEED_FACTOR*100}
  M221 S{EXTRUDE_FACTOR*100}
  G90
  SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0


##################################################
# Calibrations
##################################################

[gcode_macro CALIBRATION_MOTORS]
description: Start Motors Calibration
gcode:
  {% if printer.configfile.settings['neopixel chamber_led'] %}
    _NEOPIXELS_ORANGE
  {% endif %}
  _SCREEN_LED_ON R=1 O=1 W=0
  RESPOND MSG="Starting Motors Calibration..."
  {% if printer.toolhead.homed_axes != "xyz" %}
    G28
  {% endif %}
  G90
  G1 X0 Y0 Z10 F6000
  _CALIBRATION_MOTORS_CLEAN
  _CALIBRATION_MOTORS_DATA
  RESPOND MSG="Motors A, B and C are OK!"
  G28
  RESPOND MSG="Motors Calibration done!"
  {% if printer.configfile.settings['neopixel chamber_led'] %}
    _NEOPIXELS_WHITE
  {% endif %}
  _SCREEN_LED_ON R=0 O=0 W=1

[gcode_macro _CALIBRATION_MOTORS_CLEAN]
description: Clean Motors Data
gcode:
  M18
  SET_PIN PIN=_motor_cali_a VALUE=0
  SET_PIN PIN=_motor_cali_b VALUE=0
  SET_PIN PIN=_motor_cali_c VALUE=0
  G4 P290
  SET_PIN PIN=_motor_cali_a VALUE=1
  SET_PIN PIN=_motor_cali_b VALUE=1
  SET_PIN PIN=_motor_cali_c VALUE=1
  G4 P290
  SET_PIN PIN=_motor_cali_a VALUE=0
  SET_PIN PIN=_motor_cali_b VALUE=0
  SET_PIN PIN=_motor_cali_c VALUE=0
  G4 P290
  SET_PIN PIN=_motor_cali_a VALUE=1
  SET_PIN PIN=_motor_cali_b VALUE=1
  SET_PIN PIN=_motor_cali_c VALUE=1
  G4 P290
  SET_PIN PIN=_motor_cali_a VALUE=0
  SET_PIN PIN=_motor_cali_b VALUE=0
  SET_PIN PIN=_motor_cali_c VALUE=0
  G4 P290
  SET_PIN PIN=_motor_cali_a VALUE=1
  SET_PIN PIN=_motor_cali_b VALUE=1
  SET_PIN PIN=_motor_cali_c VALUE=1
  G4 P290
  SET_PIN PIN=_motor_cali_a VALUE=0
  SET_PIN PIN=_motor_cali_b VALUE=0
  SET_PIN PIN=_motor_cali_c VALUE=0
  G4 P1000

[gcode_macro _CALIBRATION_MOTORS_DATA]
description: Motors Calibration
gcode:
  M18
  M17
  M18
  SET_PIN PIN=_motor_cali_a VALUE=0
  SET_PIN PIN=_motor_cali_b VALUE=0
  SET_PIN PIN=_motor_cali_c VALUE=0
  G4 P200
  SET_PIN PIN=_motor_cali_c VALUE=1
  SET_PIN PIN=_motor_cali_a VALUE=1
  SET_PIN PIN=_motor_cali_b VALUE=1
  G4 P200
  SET_PIN PIN=_motor_cali_b VALUE=0
  SET_PIN PIN=_motor_cali_c VALUE=0
  SET_PIN PIN=_motor_cali_a VALUE=0
  G4 P200
  SET_PIN PIN=_motor_cali_a VALUE=1
  SET_PIN PIN=_motor_cali_b VALUE=1
  SET_PIN PIN=_motor_cali_c VALUE=1
  G4 P200
  SET_PIN PIN=_motor_cali_c VALUE=0
  SET_PIN PIN=_motor_cali_a VALUE=0
  SET_PIN PIN=_motor_cali_b VALUE=0
  G4 P200
  SET_PIN PIN=_motor_cali_b VALUE=1
  SET_PIN PIN=_motor_cali_c VALUE=1
  SET_PIN PIN=_motor_cali_a VALUE=1
  G4 P200
  SET_PIN PIN=_motor_cali_a VALUE=0
  SET_PIN PIN=_motor_cali_b VALUE=0
  SET_PIN PIN=_motor_cali_c VALUE=0
  G4 P200
  SET_PIN PIN=_motor_cali_c VALUE=1
  SET_PIN PIN=_motor_cali_a VALUE=1
  SET_PIN PIN=_motor_cali_b VALUE=1
  G4 P200
  SET_PIN PIN=_motor_cali_b VALUE=0
  SET_PIN PIN=_motor_cali_c VALUE=0
  SET_PIN PIN=_motor_cali_a VALUE=0
  G4 P200
  SET_PIN PIN=_motor_cali_a VALUE=1
  SET_PIN PIN=_motor_cali_b VALUE=1
  SET_PIN PIN=_motor_cali_c VALUE=1
  G4 P200
  SET_PIN PIN=_motor_cali_c VALUE=0
  SET_PIN PIN=_motor_cali_a VALUE=0
  SET_PIN PIN=_motor_cali_b VALUE=0
  M17
  G4 P30000

[gcode_macro CALIBRATION_Z_OFFSET]
description: Start Z-Offset Calibration
gcode:
  RESPOND MSG="Starting Z-Offset Calibration..."
  SET_GCODE_OFFSET Z=0
  G28
  G90
  G1 X0 Y0 Z50 F6000
  M400
  PROBE_CALIBRATE

[gcode_macro CALIBRATION_BED]
description: Start Delta Calibration & Bed Leveling
gcode:
  {% if printer.configfile.settings['neopixel chamber_led'] %}
    _NEOPIXELS_ORANGE
  {% endif %}
  _SCREEN_LED_ON R=1 O=1 W=0
  SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
  {% set BED_TEMP=params.BED_TEMP|default(60)|float %}
  {% set HOTEND_TEMP=params.HOTEND_TEMP|default(140)|float %}
  SET_GCODE_OFFSET Z=0
  BED_MESH_CLEAR
  G28
  M204 S200
  RESPOND MSG="Starting Bed heating..."
  M140 S{BED_TEMP}
  M190 S{BED_TEMP}
  RESPOND MSG="Starting Hotend heating..."
  M109 S{HOTEND_TEMP}
  RESPOND MSG="Starting Delta Calibration..."
  DELTA_CALIBRATE
  G90
  G1 X0 Y0 Z50 F4200
  G28
  M400
  SAVE_VARIABLE VARIABLE=delta_calibrate VALUE=True
  SAVE_CONFIG

[gcode_macro _CALIBRATION_BED_LEVELING_2]
description: Start Bed Leveling
gcode:
  {% if printer.configfile.settings['neopixel chamber_led'] %}
    _NEOPIXELS_ORANGE
  {% endif %}
  _SCREEN_LED_ON R=1 O=1 W=0
  SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
  {% set BED_TEMP=params.BED_TEMP|default(60)|float %}
  {% set HOTEND_TEMP=params.HOTEND_TEMP|default(140)|float %}
  G28
  M204 S200
  RESPOND MSG="Starting Bed heating..."
  M140 S{BED_TEMP}
  M190 S{BED_TEMP}
  RESPOND MSG="Starting Hotend heating..."
  M109 S{HOTEND_TEMP}
  RESPOND MSG="Starting Bed Leveling..."
  G90
  G1 X0 Y0 Z50 F4200
  BED_MESH_CALIBRATE
  G1 X0 Y0 Z50 F4200
  G28
  M400
  SAVE_VARIABLE VARIABLE=bed_mesh_calibrate VALUE=True
  SAVE_CONFIG

[gcode_shell_command delete_calibration_data]
command: bash /home/pi/flsun-os/macros/delete-calibration-data.sh
timeout: 10.0
verbose: False

[gcode_macro CALIBRATION_RESONANCES]
description: Start Measuring Resonances for X and Y axis
gcode:
  RUN_SHELL_COMMAND CMD=delete_calibration_data
  {% if printer.configfile.settings['neopixel chamber_led'] %}
    _NEOPIXELS_ORANGE
  {% endif %}
  _SCREEN_LED_ON R=1 O=1 W=0
  SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
  RESPOND MSG="Starting Resonances Calibration..."
  {% if printer.toolhead.homed_axes != "xyz" %}
    G28
  {% endif %}
  SHAPER_CALIBRATE
  G28
  M400
  SAVE_VARIABLE VARIABLE=shaper_calibrate VALUE=True
  SAVE_CONFIG

[gcode_shell_command generate_graphics]
command: bash /home/pi/flsun-os/macros/generate-graphics.sh
timeout: 600.0
verbose: True

[gcode_macro GENERATE_RESONANCES_GRAPHICS]
description: Generate Resonances Graphics for X and Y axis
gcode:
  {% if printer.idle_timeout.state == "Printing" %}
    RESPOND TYPE=error MSG="This macro cannot be used while printing!"
  {% else %}
    RESPOND TYPE=command MSG="Generating X and Y Graphics... This may take some time."
    RUN_SHELL_COMMAND CMD=generate_graphics
  {% endif %}

[gcode_macro CALIBRATION_PID_BED]
description: Start Bed PID Calibration
gcode:
  {% set BED_TEMP=params.BED_TEMP|default(120)|float %}
  {% if printer.idle_timeout.state == "Printing" %}
    RESPOND TYPE=error MSG="This macro cannot be used while printing!"
  {% else %}
    _SCREEN_LED_ON R=1 O=1 W=0
    {% if printer.toolhead.homed_axes != "xyz" %}
      G28
    {% endif %}
    G90
    G1 Z50 F6000
    M400
    M106 S255
    {% if printer.configfile.settings['neopixel chamber_led'] %}
      _NEOPIXELS_BED
    {% endif %}
    RESPOND MSG="Starting PID Calibration for inner bed..."
    PID_CALIBRATE HEATER=heater_bed TARGET={BED_TEMP}
    RESPOND MSG="Start heating inner bed..."
    M190 S{BED_TEMP}
    RESPOND MSG="Starting PID Calibration for outer bed..."
    PID_CALIBRATE HEATER=heater_bed_2 TARGET={BED_TEMP}
    M107
    G28
    M400
    RESPOND MSG="Bed PID calibration done!"
    SAVE_CONFIG
  {% endif %}

[gcode_macro CALIBRATION_PID_HOTEND]
description: Start Hotend PID Calibration
gcode:
  {% set HOTEND_TEMP=params.HOTEND_TEMP|default(250)|float %}
  {% if printer.idle_timeout.state == "Printing" %}
    RESPOND TYPE=error MSG="This macro cannot be used while printing!"
  {% else %}
    _SCREEN_LED_ON R=1 O=1 W=0
    RESPOND MSG="Starting Hotend PID calibration..."
    {% if printer.toolhead.homed_axes != "xyz" %}
      G28
    {% endif %}
    G90
    G1 Z50 F6000
    M400
    M106 S255
    {% if printer.configfile.settings['neopixel chamber_led'] %}
      _NEOPIXELS_HOTEND
    {% endif %}
    PID_CALIBRATE HEATER=extruder TARGET={HOTEND_TEMP}
    M107
    G28
    M400
    RESPOND MSG="Hotend PID calibration done!"
    SAVE_CONFIG
  {% endif %}

[gcode_macro _PID_KS_START]
description: PID for KlipperScreen
gcode:
  _SCREEN_LED_ON R=1 O=1 W=0
  RESPOND MSG="Starting PID calibration..."
  {% if printer.toolhead.homed_axes != "xyz" %}
    G28
  {% endif %}
  G90
  G1 Z50 F6000
  M400
  M106 S255

[gcode_macro _PID_KS_END]
description: PID for KlipperScreen
gcode:
  M107
  G28
  M400
  RESPOND MSG="PID calibration done!"
  SAVE_CONFIG

[gcode_macro CALIBRATION_X_OFFSET]
description: Apply a deviation in X axis
gcode:
  {% set MESURED_X_SIZE=params.MESURED_X_SIZE|default(0)|float %}
  {% set TARGET_X_SIZE=params.TARGET_X_SIZE|default(20)|float %}
  M101 X{MESURED_X_SIZE} T{TARGET_X_SIZE}

[gcode_macro CALIBRATION_Y_OFFSET]
description: Apply a deviation in Y axis
gcode:
  {% set MESURED_Y_SIZE=params.MESURED_Y_SIZE|default(0)|float %}
  {% set TARGET_Y_SIZE=params.TARGET_Y_SIZE|default(20)|float %}
  M101 Y{MESURED_Y_SIZE} T{TARGET_Y_SIZE}

[gcode_macro CALIBRATION_RESET_XY_OFFSETS]
description: Reset deviations applied to X and Y axis
gcode:
  M101 S0


##################################################
# Bed Mesh Type Settings
##################################################

[gcode_macro BED_MESH_SETTINGS]
description: Manage Bed Mesh Type
gcode:
  RESPOND TYPE=command MSG="action:prompt_begin Bed Mesh Settings"
  RESPOND TYPE=command MSG="action:prompt_text What type of bed mesh do you want to use before starting a print?"
  RESPOND TYPE=command MSG="action:prompt_text Note: Bed temperature will be the one defined as the first layer temperature in the slicer."
  RESPOND TYPE=command MSG="action:prompt_text "
  RESPOND TYPE=command MSG="action:prompt_text FULL MESH → Performs a full bed mesh before printing"
  RESPOND TYPE=command MSG="action:prompt_text ADAPTIVE MESH → Performs adaptive bed mesh based on model size before printing"
  RESPOND TYPE=command MSG="action:prompt_text NO MESH → No bed mesh is performed before printing (default mesh is loaded)"
  RESPOND TYPE=command MSG="action:prompt_text "
  {% if printer.save_variables.variables.adaptive_bed_mesh == 1 %}
    RESPOND TYPE=command MSG="action:prompt_text Current Mesh Status: ADAPTIVE MESH"
  {% elif printer.save_variables.variables.full_bed_mesh == 1 %}
    RESPOND TYPE=command MSG="action:prompt_text Current Mesh Status: FULL MESH"
  {% else %}
    RESPOND TYPE=command MSG="action:prompt_text Current Mesh Status: NO MESH"
  {% endif %}
  RESPOND TYPE=command MSG="action:prompt_footer_button FULL MESH|_FULL_BED_MESH_ON|primary"
  RESPOND TYPE=command MSG="action:prompt_footer_button ADAPTIVE MESH|_ADAPTIVE_BED_MESH_ON|primary"
  RESPOND TYPE=command MSG="action:prompt_footer_button NO MESH|_BED_MESH_OFF|primary"
  RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro _BED_MESH_OFF]
description: Don't start Bed Mesh before print
gcode:
  SAVE_VARIABLE VARIABLE=adaptive_bed_mesh VALUE=0
  SAVE_VARIABLE VARIABLE=full_bed_mesh VALUE=0
  RESPOND TYPE=command MSG="action:prompt_end"

[gcode_macro _ADAPTIVE_BED_MESH_ON]
description: Start Adaptive Bed Mesh before print
gcode:
  SAVE_VARIABLE VARIABLE=adaptive_bed_mesh VALUE=1
  SAVE_VARIABLE VARIABLE=full_bed_mesh VALUE=0
  RESPOND TYPE=command MSG="action:prompt_end"

[gcode_macro _FULL_BED_MESH_ON]
description: Start Full Bed Mesh before print
gcode:
  SAVE_VARIABLE VARIABLE=adaptive_bed_mesh VALUE=0
  SAVE_VARIABLE VARIABLE=full_bed_mesh VALUE=1
  RESPOND TYPE=command MSG="action:prompt_end"


##################################################
# Bed Heating Settings
##################################################

[gcode_macro BED_HEATING_SETTINGS]
description: Manage Bed Heating
gcode:
  RESPOND TYPE=command MSG="action:prompt_begin Bed Heating Settings"
  RESPOND TYPE=command MSG="action:prompt_text Do you want to use Adaptive Bed Heating?"
  RESPOND TYPE=command MSG="action:prompt_text "
  RESPOND TYPE=command MSG="action:prompt_text YES → The areas of the bed are heated depending on the model size"
  RESPOND TYPE=command MSG="action:prompt_text NO → All areas of the bed are always heated (useful for materials that require a fairly high chamber temperature)"
  RESPOND TYPE=command MSG="action:prompt_text "
  {% if printer.save_variables.variables.adaptive_bed_heating == 1 %}
    RESPOND TYPE=command MSG="action:prompt_text Adaptive Bed Heating Status: YES"
  {% else %}
    RESPOND TYPE=command MSG="action:prompt_text Adaptive Bed Heating Status: NO"
  {% endif %}
  RESPOND TYPE=command MSG="action:prompt_footer_button NO|_ADAPTIVE_BED_HEATING_OFF|primary"
  RESPOND TYPE=command MSG="action:prompt_footer_button YES|_ADAPTIVE_BED_HEATING_ON|primary"
  RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro _ADAPTIVE_BED_HEATING_ON]
description: Enable Adaptive Bed Heating
gcode:
  SAVE_VARIABLE VARIABLE=adaptive_bed_heating VALUE=1
  RESPOND TYPE=command MSG="action:prompt_end"

[gcode_macro _ADAPTIVE_BED_HEATING_OFF]
description: Disable Adaptive Bed Heating
gcode:
  SAVE_VARIABLE VARIABLE=adaptive_bed_heating VALUE=0
  RESPOND TYPE=command MSG="action:prompt_end"


########################################
# LED
########################################

[gcode_macro SET_LED]
description: Apply LED output
rename_existing: _SET_LED
gcode:
  {% if printer.configfile.settings['neopixel chamber_led'] %}
    _SET_LED LED={params.LED} RED={params.RED} GREEN={params.GREEN} BLUE={params.BLUE} SYNC={params.SYNC} TRANSMIT={params.TRANSMIT}
    SET_GCODE_VARIABLE MACRO=CHAMBER_LED_SWITCH VARIABLE=neopixels_red VALUE={params.RED}
    SET_GCODE_VARIABLE MACRO=CHAMBER_LED_SWITCH VARIABLE=neopixels_green VALUE={params.GREEN}
    SET_GCODE_VARIABLE MACRO=CHAMBER_LED_SWITCH VARIABLE=neopixels_blue VALUE={params.BLUE}
  {% else %}
    _SET_LED LED={params.LED} WHITE={params.WHITE} SYNC={params.SYNC} TRANSMIT={params.TRANSMIT}
    SET_GCODE_VARIABLE MACRO=CHAMBER_LED_SWITCH VARIABLE=led_white VALUE={params.WHITE}
  {% endif %}

[gcode_macro CHAMBER_LED_SWITCH]
description: Turn On/Off Chamber LEDs
variable_led_state: 1
variable_led_white: 1.0
variable_neopixels_state: 1
variable_neopixels_red: 1.0
variable_neopixels_green: 1.0
variable_neopixels_blue: 1.0
gcode:
  {% if printer.configfile.settings['neopixel chamber_led'] %}
    {% if printer['gcode_macro CHAMBER_LED_SWITCH'].neopixels_state == 0 %}
      _NEOPIXELS_ON
    {% else %}
      _NEOPIXELS_OFF
    {% endif %}
  {% else %}
    {% if printer['gcode_macro CHAMBER_LED_SWITCH'].led_state == 0 %}
      _CHAMBER_LED_ON
    {% else %}
      _CHAMBER_LED_OFF
    {% endif %}
  {% endif %}

[gcode_macro _CHAMBER_LED_ON]
description: Turn On The Chamber Light
gcode:
  _SET_LED LED=chamber_led WHITE={printer['gcode_macro CHAMBER_LED_SWITCH'].led_white|default(1.0)} SYNC=0 TRANSMIT=1
  SET_GCODE_VARIABLE MACRO=CHAMBER_LED_SWITCH VARIABLE=led_state VALUE=1

[gcode_macro _CHAMBER_LED_OFF]
description: Turn Off The Chamber Light
gcode:
  _SET_LED LED=chamber_led WHITE=0.00 SYNC=0 TRANSMIT=1
  SET_GCODE_VARIABLE MACRO=CHAMBER_LED_SWITCH VARIABLE=led_state VALUE=0

[gcode_macro _NEOPIXELS_ON]
description: Turn On The Chamber Light
gcode:
  SET_LED_TEMPLATE LED=chamber_led TEMPLATE=""
  _SET_LED LED=chamber_led RED={printer['gcode_macro CHAMBER_LED_SWITCH'].neopixels_red|default(1.0)} GREEN={printer['gcode_macro CHAMBER_LED_SWITCH'].neopixels_green|default(1.0)} BLUE={printer['gcode_macro CHAMBER_LED_SWITCH'].neopixels_blue|default(1.0)} SYNC=0 TRANSMIT=1
  SET_GCODE_VARIABLE MACRO=CHAMBER_LED_SWITCH VARIABLE=neopixels_state VALUE=1

[gcode_macro _NEOPIXELS_OFF]
description: Turn Off The Chamber Light
gcode:
  {% if printer['gcode_macro _NEOPIXELS_PRESETS'].prompt_state != 0 %}
    RESPOND TYPE=command MSG="action:prompt_end"
    SET_GCODE_VARIABLE MACRO=_NEOPIXELS_PRESETS VARIABLE=prompt_state VALUE=0
  {% endif %}
  SET_LED_TEMPLATE LED=chamber_led TEMPLATE=""
  _SET_LED LED=chamber_led RED=0.0 GREEN=0.0 BLUE=0.0 SYNC=0 TRANSMIT=1
  SET_GCODE_VARIABLE MACRO=CHAMBER_LED_SWITCH VARIABLE=neopixels_state VALUE=0

[gcode_macro _NEOPIXELS_PRESETS]
description: Neopixels Presets
variable_prompt_state: 0
gcode:
  RESPOND TYPE=command MSG="action:prompt_begin Neopixels Presets"
  RESPOND TYPE=command MSG="action:prompt_text Turn on Neopixels based on hotend temperature, bed temperature, print progress or print speed."
  RESPOND TYPE=command MSG="action:prompt_button_group_start"
  RESPOND TYPE=command MSG="action:prompt_button HOTEND TEMP|_NEOPIXELS_HOTEND|primary"
  RESPOND TYPE=command MSG="action:prompt_button BED TEMP|_NEOPIXELS_BED|primary"
  RESPOND TYPE=command MSG="action:prompt_button_group_end"
  RESPOND TYPE=command MSG="action:prompt_button_group_start"
  RESPOND TYPE=command MSG="action:prompt_button PRINT PROGRESS|_NEOPIXELS_PERCENT|primary"
  RESPOND TYPE=command MSG="action:prompt_button PRINT SPEED|_NEOPIXELS_SPEED|primary"
  RESPOND TYPE=command MSG="action:prompt_button_group_end"
  RESPOND TYPE=command MSG="action:prompt_show"
  SET_GCODE_VARIABLE MACRO=_NEOPIXELS_PRESETS VARIABLE=prompt_state VALUE=1

[gcode_macro _NEOPIXELS_WHITE]
description: Turn On Neopixels LEDs in White
gcode:
  {% if printer['gcode_macro _NEOPIXELS_PRESETS'].prompt_state != 0 %}
    RESPOND TYPE=command MSG="action:prompt_end"
    SET_GCODE_VARIABLE MACRO=_NEOPIXELS_PRESETS VARIABLE=prompt_state VALUE=0
  {% endif %}
  SET_LED_TEMPLATE LED=chamber_led TEMPLATE=""
  _SET_LED LED=chamber_led RED=1.0 GREEN=1.0 BLUE=1.0 SYNC=0 TRANSMIT=1
  SET_GCODE_VARIABLE MACRO=CHAMBER_LED_SWITCH VARIABLE=neopixels_red VALUE=1.0
  SET_GCODE_VARIABLE MACRO=CHAMBER_LED_SWITCH VARIABLE=neopixels_green VALUE=1.0
  SET_GCODE_VARIABLE MACRO=CHAMBER_LED_SWITCH VARIABLE=neopixels_blue VALUE=1.0
  SET_GCODE_VARIABLE MACRO=CHAMBER_LED_SWITCH VARIABLE=neopixels_state VALUE=1

[gcode_macro _NEOPIXELS_BLUE]
description: Turn On Neopixels LEDs in Blue
gcode:
  {% if printer['gcode_macro _NEOPIXELS_PRESETS'].prompt_state != 0 %}
    RESPOND TYPE=command MSG="action:prompt_end"
    SET_GCODE_VARIABLE MACRO=_NEOPIXELS_PRESETS VARIABLE=prompt_state VALUE=0
  {% endif %}
  SET_LED_TEMPLATE LED=chamber_led TEMPLATE=""
  _SET_LED LED=chamber_led RED=0.0 GREEN=0.0 BLUE=1.0 SYNC=0 TRANSMIT=1
  SET_GCODE_VARIABLE MACRO=CHAMBER_LED_SWITCH VARIABLE=neopixels_red VALUE=0.0
  SET_GCODE_VARIABLE MACRO=CHAMBER_LED_SWITCH VARIABLE=neopixels_green VALUE=0.0
  SET_GCODE_VARIABLE MACRO=CHAMBER_LED_SWITCH VARIABLE=neopixels_blue VALUE=1.0
  SET_GCODE_VARIABLE MACRO=CHAMBER_LED_SWITCH VARIABLE=neopixels_state VALUE=1

[gcode_macro _NEOPIXELS_RED]
description: Turn On Neopixels LEDs in red
gcode:
  RESPOND TYPE=command MSG="action:prompt_end"
  SET_LED_TEMPLATE LED=chamber_led TEMPLATE=""
  SET_LED LED=chamber_led RED=1.0 GREEN=0.0 BLUE=0.0 SYNC=0 TRANSMIT=1
  SET_GCODE_VARIABLE MACRO=CHAMBER_LED_SWITCH VARIABLE=neopixels_red VALUE=1.0
  SET_GCODE_VARIABLE MACRO=CHAMBER_LED_SWITCH VARIABLE=neopixels_green VALUE=0.0
  SET_GCODE_VARIABLE MACRO=CHAMBER_LED_SWITCH VARIABLE=neopixels_blue VALUE=0.0
  SET_GCODE_VARIABLE MACRO=CHAMBER_LED_SWITCH VARIABLE=neopixels_state VALUE=1

[gcode_macro _NEOPIXELS_GREEN]
description: Turn On Neopixels LEDs in Green
gcode:
  RESPOND TYPE=command MSG="action:prompt_end"
  SET_LED_TEMPLATE LED=chamber_led TEMPLATE=""
  _SET_LED LED=chamber_led RED=0.0 GREEN=1.0 BLUE=0.0 SYNC=0 TRANSMIT=1
  SET_GCODE_VARIABLE MACRO=CHAMBER_LED_SWITCH VARIABLE=neopixels_red VALUE=0.0
  SET_GCODE_VARIABLE MACRO=CHAMBER_LED_SWITCH VARIABLE=neopixels_green VALUE=1.0
  SET_GCODE_VARIABLE MACRO=CHAMBER_LED_SWITCH VARIABLE=neopixels_blue VALUE=0.0
  SET_GCODE_VARIABLE MACRO=CHAMBER_LED_SWITCH VARIABLE=neopixels_state VALUE=1

[gcode_macro _NEOPIXELS_YELLOW]
description: Turn On Neopixels LEDs in Yellow
gcode:
  {% if printer['gcode_macro _NEOPIXELS_PRESETS'].prompt_state != 0 %}
    RESPOND TYPE=command MSG="action:prompt_end"
    SET_GCODE_VARIABLE MACRO=_NEOPIXELS_PRESETS VARIABLE=prompt_state VALUE=0
  {% endif %}
  SET_LED_TEMPLATE LED=chamber_led TEMPLATE=""
  _SET_LED LED=chamber_led RED=1.0 GREEN=1.0 BLUE=0.0 SYNC=0 TRANSMIT=1
  SET_GCODE_VARIABLE MACRO=CHAMBER_LED_SWITCH VARIABLE=neopixels_red VALUE=1.0
  SET_GCODE_VARIABLE MACRO=CHAMBER_LED_SWITCH VARIABLE=neopixels_green VALUE=1.0
  SET_GCODE_VARIABLE MACRO=CHAMBER_LED_SWITCH VARIABLE=neopixels_blue VALUE=0.0
  SET_GCODE_VARIABLE MACRO=CHAMBER_LED_SWITCH VARIABLE=neopixels_state VALUE=1
  
[gcode_macro _NEOPIXELS_ORANGE]
description: Turn On Neopixels LEDs in Orange
gcode:
  {% if printer['gcode_macro _NEOPIXELS_PRESETS'].prompt_state != 0 %}
    RESPOND TYPE=command MSG="action:prompt_end"
    SET_GCODE_VARIABLE MACRO=_NEOPIXELS_PRESETS VARIABLE=prompt_state VALUE=0
  {% endif %}
  SET_LED_TEMPLATE LED=chamber_led TEMPLATE=""
  _SET_LED LED=chamber_led RED=1.0 GREEN=0.31 BLUE=0.0 SYNC=0 TRANSMIT=1
  SET_GCODE_VARIABLE MACRO=CHAMBER_LED_SWITCH VARIABLE=neopixels_red VALUE=1.0
  SET_GCODE_VARIABLE MACRO=CHAMBER_LED_SWITCH VARIABLE=neopixels_green VALUE=0.31
  SET_GCODE_VARIABLE MACRO=CHAMBER_LED_SWITCH VARIABLE=neopixels_blue VALUE=0.0
  SET_GCODE_VARIABLE MACRO=CHAMBER_LED_SWITCH VARIABLE=neopixels_state VALUE=1

[gcode_macro _NEOPIXELS_VIOLET]
description: Turn On Neopixels LEDs in Violet
gcode:
  {% if printer['gcode_macro _NEOPIXELS_PRESETS'].prompt_state != 0 %}
    RESPOND TYPE=command MSG="action:prompt_end"
    SET_GCODE_VARIABLE MACRO=_NEOPIXELS_PRESETS VARIABLE=prompt_state VALUE=0
  {% endif %}
  SET_LED_TEMPLATE LED=chamber_led TEMPLATE=""
  _SET_LED LED=chamber_led RED=1.0 GREEN=0.0 BLUE=1.0 SYNC=0 TRANSMIT=1
  SET_GCODE_VARIABLE MACRO=CHAMBER_LED_SWITCH VARIABLE=neopixels_red VALUE=1.0
  SET_GCODE_VARIABLE MACRO=CHAMBER_LED_SWITCH VARIABLE=neopixels_green VALUE=0.0
  SET_GCODE_VARIABLE MACRO=CHAMBER_LED_SWITCH VARIABLE=neopixels_blue VALUE=1.0
  SET_GCODE_VARIABLE MACRO=CHAMBER_LED_SWITCH VARIABLE=neopixels_state VALUE=1

[gcode_macro _NEOPIXELS_HOTEND]
description: Turn on Neopixels LEDs based on Nozzle Temperature
gcode:
  {% if printer['gcode_macro _NEOPIXELS_PRESETS'].prompt_state != 0 %}
    RESPOND TYPE=command MSG="action:prompt_end"
    SET_GCODE_VARIABLE MACRO=_NEOPIXELS_PRESETS VARIABLE=prompt_state VALUE=0
  {% endif %}
  SET_LED_TEMPLATE LED=chamber_led TEMPLATE=""
  SET_LED_TEMPLATE LED=chamber_led TEMPLATE=neopixels_hotend_temp

[gcode_macro _NEOPIXELS_BED]
description: Turn on Neopixels LEDs based on Bed Temperature
gcode:
  {% if printer['gcode_macro _NEOPIXELS_PRESETS'].prompt_state != 0 %}
    RESPOND TYPE=command MSG="action:prompt_end"
    SET_GCODE_VARIABLE MACRO=_NEOPIXELS_PRESETS VARIABLE=prompt_state VALUE=0
  {% endif %}
  SET_LED_TEMPLATE LED=chamber_led TEMPLATE=""
  SET_LED_TEMPLATE LED=chamber_led TEMPLATE=neopixels_bed_temp

[gcode_macro _NEOPIXELS_PROGRESS]
description: Turn on Neopixels LEDs based on Printing Progress
gcode:
  {% if printer['gcode_macro _NEOPIXELS_PRESETS'].prompt_state != 0 %}
    RESPOND TYPE=command MSG="action:prompt_end"
    SET_GCODE_VARIABLE MACRO=_NEOPIXELS_PRESETS VARIABLE=prompt_state VALUE=0
  {% endif %}
  SET_LED_TEMPLATE LED=chamber_led TEMPLATE=""
  SET_LED_TEMPLATE LED=chamber_led TEMPLATE=neopixels_print_progress

[gcode_macro _NEOPIXELS_SPEED]
description: Turn on Neopixels LEDs based on Printing Speed
gcode:
  {% if printer['gcode_macro _NEOPIXELS_PRESETS'].prompt_state != 0 %}
    RESPOND TYPE=command MSG="action:prompt_end"
    SET_GCODE_VARIABLE MACRO=_NEOPIXELS_PRESETS VARIABLE=prompt_state VALUE=0
  {% endif %}
  SET_LED_TEMPLATE LED=chamber_led TEMPLATE=""
  SET_LED_TEMPLATE LED=chamber_led TEMPLATE=neopixels_print_speed

[display_template neopixels_hotend_temp]
text:
  {% if printer.extruder.target > 0.0 %}
    {%  set temp = printer.extruder.target %}
  {% else %}
    {% set temp = printer.configfile.config.extruder.max_temp %}
  {% endif %}
  {% set ratio = printer.extruder.temperature / temp|float %}
  {ratio}, 0.0, {1-ratio}, 0.0

[display_template neopixels_bed_temp]
text:
  {% if printer.heater_bed.target > 0.0 %}
    {%  set temp = printer.heater_bed.target %}
  {% else %}
    {% set temp = printer.configfile.config.heater_bed.max_temp %}
  {% endif %}
  {% set ratio = printer.heater_bed.temperature / temp|float %}
  {ratio}, 0.0, {1-ratio}, 0.0

[display_template neopixels_print_progress]
text:
  {% set ratio = printer.virtual_sdcard.progress %}
  0.0, {ratio}, 0.0, 0.0

[display_template neopixels_print_speed]
text:
  {% set ratio = printer.motion_report.live_velocity|float / printer.configfile.config.printer.max_velocity|float %}
  0.0, {ratio}, 0.0, 0.0

[gcode_macro _SCREEN_LED_ON]
description: Turn On The Screen Lights
gcode:
  SET_PIN PIN=_led_red VALUE={ params.R|default(1) }
  SET_PIN PIN=_led_orange VALUE={ params.O|default(1) }
  SET_PIN PIN=_led_white VALUE={ params.W|default(1) }

[gcode_macro _SCREEN_LED_OFF]
description: Turn Off The Screen Lights
gcode:
  SET_PIN PIN=_led_red VALUE=0
  SET_PIN PIN=_led_orange VALUE=0
  SET_PIN PIN=_led_white VALUE=0


########################################
# Relay
########################################

[gcode_macro _RELAY_ON]
description: Turn On Relay
gcode:
  SET_PIN PIN=_relay VALUE=1

[gcode_macro _RELAY_OFF]
description: Turn Off Relay
gcode:
  SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
  SET_PIN PIN=_relay VALUE=0


########################################
# Drying Box
########################################

[gcode_macro MANAGE_DRYING_BOX]
description: Manage Drying Box
variable_prompt_state: 0
gcode:
  RESPOND TYPE=command MSG="action:prompt_begin Manage Drying Box"
  RESPOND TYPE=command MSG="action:prompt_text How long do you want to heat the Drying Box?"
  RESPOND TYPE=command MSG="action:prompt_button_group_start"
  RESPOND TYPE=command MSG="action:prompt_button 1 HOUR|_START_DRYING_BOX_1|secondary"
  RESPOND TYPE=command MSG="action:prompt_button 2 HOURS|_START_DRYING_BOX_2|secondary"
  RESPOND TYPE=command MSG="action:prompt_button 3 HOURS|_START_DRYING_BOX_3|secondary"
  RESPOND TYPE=command MSG="action:prompt_button_group_end"
  RESPOND TYPE=command MSG="action:prompt_button_group_start"
  RESPOND TYPE=command MSG="action:prompt_button 4 HOURS|_START_DRYING_BOX_4|secondary"
  RESPOND TYPE=command MSG="action:prompt_button 5 HOURS|_START_DRYING_BOX_5|secondary"
  RESPOND TYPE=command MSG="action:prompt_button 6 HOURS|_START_DRYING_BOX_6|secondary"
  RESPOND TYPE=command MSG="action:prompt_button_group_end"
  RESPOND TYPE=command MSG="action:prompt_button_group_start"
  RESPOND TYPE=command MSG="action:prompt_button 7 HOURS|_START_DRYING_BOX_7|secondary"
  RESPOND TYPE=command MSG="action:prompt_button 8 HOURS|_START_DRYING_BOX_8|secondary"
  RESPOND TYPE=command MSG="action:prompt_button 9 HOURS|_START_DRYING_BOX_9|secondary"
  RESPOND TYPE=command MSG="action:prompt_button_group_end"
  RESPOND TYPE=command MSG="action:prompt_footer_button RESET SENSOR|RESET_SPOOL_WEIGHT_SENSOR|warning"
  RESPOND TYPE=command MSG="action:prompt_footer_button STOP|DRYING_BOX_STOP|error"
  RESPOND TYPE=command MSG="action:prompt_footer_button MANUAL HEATING|_DRYING_BOX_TEMP|primary"
  RESPOND TYPE=command MSG="action:prompt_show"
  SET_GCODE_VARIABLE MACRO=MANAGE_DRYING_BOX VARIABLE=prompt_state VALUE=1

[gcode_macro _DRYING_BOX_TEMP]
description: Manage Drying Box Temperature
variable_prompt_state: 0
gcode:
  RESPOND TYPE=command MSG="action:prompt_begin Manage Drying Box"
  RESPOND TYPE=command MSG="action:prompt_text What temperature do you want to heat the Drying Box?"
  RESPOND TYPE=command MSG="action:prompt_button_group_start"
  RESPOND TYPE=command MSG="action:prompt_button 40C°|_DRYING_BOX_TEMP_1|secondary"
  RESPOND TYPE=command MSG="action:prompt_button 45C°|_DRYING_BOX_TEMP_2|secondary"
  RESPOND TYPE=command MSG="action:prompt_button 50C°|_DRYING_BOX_TEMP_3|secondary"
  RESPOND TYPE=command MSG="action:prompt_button_group_end"
  RESPOND TYPE=command MSG="action:prompt_button_group_start"
  RESPOND TYPE=command MSG="action:prompt_button 55C°|_DRYING_BOX_TEMP_4|secondary"
  RESPOND TYPE=command MSG="action:prompt_button 60C°|_DRYING_BOX_TEMP_5|secondary"
  RESPOND TYPE=command MSG="action:prompt_button 65C°|_DRYING_BOX_TEMP_6|secondary"
  RESPOND TYPE=command MSG="action:prompt_button_group_end"
  RESPOND TYPE=command MSG="action:prompt_footer_button CANCEL|DRYING_BOX_STOP|warning"
  RESPOND TYPE=command MSG="action:prompt_show"
  SET_GCODE_VARIABLE MACRO=_DRYING_BOX_TEMP VARIABLE=prompt_state VALUE=1

[gcode_macro DRYING_BOX_START]
description: Start Drying Box Heating
gcode:
  {% set DRYING_BOX_TEMP=params.DRYING_BOX_TEMP|default(60)|float %}
  SET_HEATER_TEMPERATURE HEATER=drying_box TARGET={DRYING_BOX_TEMP}
  {% if printer['gcode_macro MANAGE_DRYING_BOX'].prompt_state != 0 %}
    RESPOND TYPE=command MSG="action:prompt_end"
    SET_GCODE_VARIABLE MACRO=MANAGE_DRYING_BOX VARIABLE=prompt_state VALUE=0
  {% endif %}

[gcode_macro DRYING_BOX_STOP]
description: Stop Drying Box Heating
gcode:
  SET_HEATER_TEMPERATURE HEATER=drying_box TARGET=0
  UPDATE_DELAYED_GCODE ID=STOP_DRYING_BOX DURATION=0
  {% if printer['gcode_macro MANAGE_DRYING_BOX'].prompt_state != 0 %}
    RESPOND TYPE=command MSG="action:prompt_end"
    SET_GCODE_VARIABLE MACRO=MANAGE_DRYING_BOX VARIABLE=prompt_state VALUE=0
  {% endif %}

[delayed_gcode STOP_DRYING_BOX]
initial_duration: 0
gcode:
  SET_HEATER_TEMPERATURE HEATER=drying_box TARGET=0
  UPDATE_DELAYED_GCODE ID=STOP_DRYING_BOX DURATION=0
  RESPOND TYPE=command MSG="Drying Box heating stopped after delay."

[gcode_macro _START_DRYING_BOX_1]
description: Start Drying Box for 1 Hour
gcode:
  UPDATE_DELAYED_GCODE ID=STOP_DRYING_BOX DURATION=3600
  RESPOND TYPE=command MSG="action:prompt_end"
  _DRYING_BOX_TEMP

[gcode_macro _START_DRYING_BOX_2]
description: Start Drying Box for 2 Hours
gcode:
  UPDATE_DELAYED_GCODE ID=STOP_DRYING_BOX DURATION=7200
  RESPOND TYPE=command MSG="action:prompt_end"
  _DRYING_BOX_TEMP

[gcode_macro _START_DRYING_BOX_3]
description: Start Drying Box for 3 Hours
gcode:
  UPDATE_DELAYED_GCODE ID=STOP_DRYING_BOX DURATION=10800
  RESPOND TYPE=command MSG="action:prompt_end"
  _DRYING_BOX_TEMP

[gcode_macro _START_DRYING_BOX_4]
description: Start Drying Box for 4 Hours
gcode:
  UPDATE_DELAYED_GCODE ID=STOP_DRYING_BOX DURATION=14400
  RESPOND TYPE=command MSG="action:prompt_end"
  _DRYING_BOX_TEMP

[gcode_macro _START_DRYING_BOX_5]
description: Start Drying Box for 5 Hours
gcode:
  UPDATE_DELAYED_GCODE ID=STOP_DRYING_BOX DURATION=18000
  RESPOND TYPE=command MSG="action:prompt_end"
  _DRYING_BOX_TEMP

[gcode_macro _START_DRYING_BOX_6]
description: Start Drying Box for 6 Hours
gcode:
  UPDATE_DELAYED_GCODE ID=STOP_DRYING_BOX DURATION=21600
  RESPOND TYPE=command MSG="action:prompt_end"
  _DRYING_BOX_TEMP

[gcode_macro _START_DRYING_BOX_7]
description: Start Drying Box for 7 Hours
gcode:
  UPDATE_DELAYED_GCODE ID=STOP_DRYING_BOX DURATION=25200
  RESPOND TYPE=command MSG="action:prompt_end"
  _DRYING_BOX_TEMP

[gcode_macro _START_DRYING_BOX_8]
description: Start Drying Box for 8 Hours
gcode:
  UPDATE_DELAYED_GCODE ID=STOP_DRYING_BOX DURATION=28800
  RESPOND TYPE=command MSG="action:prompt_end"
  _DRYING_BOX_TEMP

[gcode_macro _START_DRYING_BOX_9]
description: Start Drying Box for 9 Hours
gcode:
  UPDATE_DELAYED_GCODE ID=STOP_DRYING_BOX DURATION=32400
  RESPOND TYPE=command MSG="action:prompt_end"
  _DRYING_BOX_TEMP

[gcode_macro _DRYING_BOX_TEMP_1]
description: Heat Drying Box at 40°C
gcode:
  SET_HEATER_TEMPERATURE HEATER=drying_box TARGET=40
  {% if printer['gcode_macro _DRYING_BOX_TEMP'].prompt_state != 0 %}
    RESPOND TYPE=command MSG="action:prompt_end"
    SET_GCODE_VARIABLE MACRO=_DRYING_BOX_TEMP VARIABLE=prompt_state VALUE=0
  {% endif %}

[gcode_macro _DRYING_BOX_TEMP_2]
description: Heat Drying Box at 45°C
gcode:
  SET_HEATER_TEMPERATURE HEATER=drying_box TARGET=45
  {% if printer['gcode_macro _DRYING_BOX_TEMP'].prompt_state != 0 %}
    RESPOND TYPE=command MSG="action:prompt_end"
    SET_GCODE_VARIABLE MACRO=_DRYING_BOX_TEMP VARIABLE=prompt_state VALUE=0
  {% endif %}

[gcode_macro _DRYING_BOX_TEMP_3]
description: Heat Drying Box at 50°C
gcode:
  SET_HEATER_TEMPERATURE HEATER=drying_box TARGET=50
  {% if printer['gcode_macro _DRYING_BOX_TEMP'].prompt_state != 0 %}
    RESPOND TYPE=command MSG="action:prompt_end"
    SET_GCODE_VARIABLE MACRO=_DRYING_BOX_TEMP VARIABLE=prompt_state VALUE=0
  {% endif %}

[gcode_macro _DRYING_BOX_TEMP_4]
description: Heat Drying Box at 55°C
gcode:
  SET_HEATER_TEMPERATURE HEATER=drying_box TARGET=55
  {% if printer['gcode_macro _DRYING_BOX_TEMP'].prompt_state != 0 %}
    RESPOND TYPE=command MSG="action:prompt_end"
    SET_GCODE_VARIABLE MACRO=_DRYING_BOX_TEMP VARIABLE=prompt_state VALUE=0
  {% endif %}

[gcode_macro _DRYING_BOX_TEMP_5]
description: Heat Drying Box at 60°C
gcode:
  SET_HEATER_TEMPERATURE HEATER=drying_box TARGET=60
  {% if printer['gcode_macro _DRYING_BOX_TEMP'].prompt_state != 0 %}
    RESPOND TYPE=command MSG="action:prompt_end"
    SET_GCODE_VARIABLE MACRO=_DRYING_BOX_TEMP VARIABLE=prompt_state VALUE=0
  {% endif %}

[gcode_macro _DRYING_BOX_TEMP_6]
description: Heat Drying Box at 65°C
gcode:
  SET_HEATER_TEMPERATURE HEATER=drying_box TARGET=65
  {% if printer['gcode_macro _DRYING_BOX_TEMP'].prompt_state != 0 %}
    RESPOND TYPE=command MSG="action:prompt_end"
    SET_GCODE_VARIABLE MACRO=_DRYING_BOX_TEMP VARIABLE=prompt_state VALUE=0
  {% endif %}

[gcode_shell_command Reset_Spool_Weight]
command: sh /home/pi/flsun-os/macros/drying-box-reset.sh
timeout: 10.0
verbose: False

[gcode_macro RESET_SPOOL_WEIGHT_SENSOR]
description: Reset Spool Weight Sensor
gcode:
  RESPOND TYPE=command MSG="action:prompt_begin Reset Spool Weight Sensor"
  RESPOND TYPE=command MSG="action:prompt_text There is filament on the spool, but the remaining amount of filament displayed on the screen is significantly different from the actual remaining amount. This is due to an error in the filament weighing sensor and requires calibration."
  RESPOND TYPE=command MSG="action:prompt_text 1 - Take the filament spool out of the Drying Box."
  RESPOND TYPE=command MSG="action:prompt_text 2 - Click on RESET button."
  RESPOND TYPE=command MSG="action:prompt_text 3 - After the reset, replace the filament spool and the correct percentage should be displayed."
  RESPOND TYPE=command MSG="action:prompt_footer_button CANCEL|RESPOND TYPE=command MSG=action:prompt_end|warning"
  RESPOND TYPE=command MSG="action:prompt_footer_button RESET|_RESET_SPOOL_WEIGHT|primary"
  RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro _RESET_SPOOL_WEIGHT]
description: Reset Spool Weight Sensor
gcode:
  RUN_SHELL_COMMAND CMD=Reset_Spool_Weight
  RESPOND TYPE=command MSG="action:prompt_end"
  RESPOND MSG="Spool Weight Sensor has been reset!"


########################################
# Power Loss
########################################


[gcode_macro _START_PRINT_RESUME]
description: Resume G-Codes for Power Loss
gcode:
  _RELAY_ON
  _CLEAR_POWER_LOSS_PARAMS
  SET_TMC_CURRENT STEPPER=extruder CURRENT={printer.configfile.settings['tmc5160 extruder'].run_current}
  CLEAR_PAUSE
  _SCREEN_LED_ON R=0 O=0 W=1
  M114 F0

[gcode_macro RESUME_PRINT_AFTER_PLR]
description: Resume Print from Power Loss
gcode:
  RESPOND TYPE=command MSG=action:prompt_end
  {% if printer.save_variables.variables.was_interrupted %}
    {% set file_position = printer.save_variables.variables.file_position %}
    {% set absolute_extrude = printer.save_variables.variables.absolute_extrude %}
    {% set e_pos = printer.save_variables.variables.e_pos %}
    {% set x_pos = printer.save_variables.variables.x_pos %}
    {% set y_pos = printer.save_variables.variables.y_pos %}
    {% set z_pos = printer.save_variables.variables.z_pos %}
    {% set last_file = params.GCODE_FILE|default(printer.save_variables.variables.sd_filename)|string %}
    {% set print_duration = printer.save_variables.variables.print_duration %}
    {% set filament_used = printer.save_variables.variables.filament_used %}
    {% set nozzle_temp = printer.save_variables.variables.nozzle_temp %}
    {% set bed_temp = printer.save_variables.variables.bed_temp %}
    {% set bed_temp_out = printer.save_variables.variables.bed_temp_out %}
    {% set chamber_fan_speed = printer.save_variables.variables.chamber_fan_speed %}  
    {% set max_velocity = printer.save_variables.variables.max_velocity %}
    {% set max_accel = printer.save_variables.variables.max_accel %}
    {% set minimum_cruise_ratio = printer.save_variables.variables.minimum_cruise_ratio %}
    {% set square_corner_velocity = printer.save_variables.variables.square_corner_velocity %}
    {% set speed_factor = printer.save_variables.variables.speed_factor %}
    {% set extrude_factor = printer.save_variables.variables.extrude_factor %}
    {% set fan_speed = printer.save_variables.variables.fan_speed %}
    G28
    _SCREEN_LED_ON R=1 O=1 W=0
    {% if printer.configfile.settings['neopixel chamber_led'] %}
      _NEOPIXELS_BED
    {% endif %}
    M104 S{nozzle_temp}
    M140 S{bed_temp} B0
    M140 S{bed_temp_out} B1
    M109 S{nozzle_temp}
    M190 S{bed_temp} B0
    M190 S{bed_temp_out} B1
    {% if printer.configfile.settings['neopixel chamber_led'] %}
      _NEOPIXELS_WHITE
    {% endif %}
    _SCREEN_LED_ON R=0 O=1 W=1
    SET_FAN_SPEED FAN=chamber_fan SPEED={chamber_fan_speed}
    G90
    G92 E{e_pos}
    {% if absolute_extrude %}
      M82
    {% else %}
      M83
    {% endif%}
    G1 X{x_pos} Y{y_pos} Z{z_pos} E1 F2000
    SET_VELOCITY_LIMIT VELOCITY={max_velocity} ACCEL={max_accel} MINIMUM_CRUISE_RATIO={minimum_cruise_ratio} SQUARE_CORNER_VELOCITY={square_corner_velocity}
    M220 S{speed_factor * 100}
    M221 S{extrude_factor * 100}
    {% set fan_speed = fan_speed * 255 / printer.configfile.settings['fan'].max_power %}
    M106 S{fan_speed}
    POWER_LOSS_RESTART_PRINT FILENAME='{last_file}' FILEPOSITION={file_position} PRINT_DURATION={print_duration} FILAMENT_USED={filament_used}
  {% else %}
    RESPOND MSG="No previous state saved!"
  {% endif%}

[gcode_macro _SAVE_POWER_LOSS_PARAMS]
description: Save parameters for Power Loss Recovery
gcode:
    SAVE_VARIABLE VARIABLE=sd_filename VALUE='"{printer.virtual_sdcard.file_path|string}"'
    SAVE_VARIABLE VARIABLE=file_position VALUE={printer.virtual_sdcard.file_position}
    SAVE_VARIABLE VARIABLE=absolute_extrude VALUE={printer.gcode_move.absolute_extrude}
    SAVE_VARIABLE VARIABLE=e_pos VALUE={printer.gcode_move.gcode_position.e}
    SAVE_VARIABLE VARIABLE=x_pos VALUE={printer.gcode_move.gcode_position.x}
    SAVE_VARIABLE VARIABLE=y_pos VALUE={printer.gcode_move.gcode_position.y}
    SAVE_VARIABLE VARIABLE=z_pos VALUE={printer.gcode_move.gcode_position.z}
    SAVE_VARIABLE VARIABLE=speed_factor VALUE={printer.gcode_move.speed_factor}
    SAVE_VARIABLE VARIABLE=extrude_factor VALUE={printer.gcode_move.extrude_factor}
    SAVE_VARIABLE VARIABLE=print_duration VALUE={printer.print_stats.print_duration}
    SAVE_VARIABLE VARIABLE=filament_used VALUE={printer.print_stats.filament_used}
    SAVE_VARIABLE VARIABLE=fan_speed VALUE={printer.fan.speed|float}
    SAVE_VARIABLE VARIABLE=nozzle_temp VALUE={printer.extruder.target|float}
    SAVE_VARIABLE VARIABLE=bed_temp VALUE={printer.heater_bed.target|float}
    SAVE_VARIABLE VARIABLE=bed_temp_out VALUE={printer["heater_generic heater_bed_2"].target|float}
    SAVE_VARIABLE VARIABLE=chamber_fan_speed VALUE={printer["fan_generic chamber_fan"].speed|float}
    SAVE_VARIABLE VARIABLE=max_velocity VALUE={printer.toolhead.max_velocity}
    SAVE_VARIABLE VARIABLE=max_accel VALUE={printer.toolhead.max_accel}
    SAVE_VARIABLE VARIABLE=minimum_cruise_ratio VALUE={printer.toolhead.minimum_cruise_ratio}
    SAVE_VARIABLE VARIABLE=square_corner_velocity VALUE={printer.toolhead.square_corner_velocity}
    SAVE_VARIABLE VARIABLE=was_interrupted VALUE=True

[gcode_macro _CLEAR_POWER_LOSS_PARAMS]
description: Clear parameters for Power Loss Recovery
gcode:
    SAVE_VARIABLE VARIABLE=was_interrupted VALUE=False
    SAVE_VARIABLE VARIABLE=file_position VALUE=0
    SAVE_VARIABLE VARIABLE=absolute_extrude VALUE=False
    SAVE_VARIABLE VARIABLE=e_pos VALUE=0.0
    SAVE_VARIABLE VARIABLE=x_pos VALUE=0.0
    SAVE_VARIABLE VARIABLE=y_pos VALUE=0.0
    SAVE_VARIABLE VARIABLE=z_pos VALUE=0.0
    SAVE_VARIABLE VARIABLE=speed_factor VALUE=1.0
    SAVE_VARIABLE VARIABLE=extrude_factor VALUE=1.0
    SAVE_VARIABLE VARIABLE=print_duration VALUE=0.0
    SAVE_VARIABLE VARIABLE=filament_used VALUE=0.0
    SAVE_VARIABLE VARIABLE=fan_speed VALUE=0.0
    SAVE_VARIABLE VARIABLE=nozzle_temp VALUE=0
    SAVE_VARIABLE VARIABLE=bed_temp VALUE=0
    SAVE_VARIABLE VARIABLE=bed_temp_out VALUE=0
    SAVE_VARIABLE VARIABLE=chamber_fan_speed VALUE=0.0
    SAVE_VARIABLE VARIABLE=max_velocity VALUE={printer.toolhead.max_velocity}
    SAVE_VARIABLE VARIABLE=max_accel VALUE={printer.toolhead.max_accel}
    SAVE_VARIABLE VARIABLE=minimum_cruise_ratio VALUE={printer.toolhead.minimum_cruise_ratio}
    SAVE_VARIABLE VARIABLE=square_corner_velocity VALUE={printer.toolhead.square_corner_velocity}


##################################################
# Gcode Offsets Management
##################################################

[gcode_macro SET_GCODE_OFFSET]
description: Saving Gcode Offsets
rename_existing: _SET_GCODE_OFFSET
gcode:
  {% if printer.save_variables.variables.gcode_offsets %}
    {% set offsets = printer.save_variables.variables.gcode_offsets %}
  {% else %}
    {% set offsets = {'x': None,'y': None,'z': None} %}
  {% endif %}
  {%if 'X' in params %}{% set null = offsets.update({'x': params.X}) %}{% endif %}
  {%if 'Y' in params %}{% set null = offsets.update({'y': params.Y}) %}{% endif %}
  {%if 'Z' in params %}{% set null = offsets.update({'z': params.Z}) %}{% endif %}
  {%if 'X_ADJUST' in params %}
    {%if offsets.x == None %}
      {% set null = offsets.update({'x': 0}) %}
    {% endif %}
    {% set null = offsets.update({'x': (offsets.x | float) + (params.X_ADJUST | float)}) %}
  {% endif %}
  {%if 'Y_ADJUST' in params %}
    {%if offsets.y == None %}
      {% set null = offsets.update({'y': 0}) %}
    {% endif %}
    {% set null = offsets.update({'y': (offsets.y | float) + (params.Y_ADJUST | float)}) %}
  {% endif %}
  {%if 'Z_ADJUST' in params %}
    {%if offsets.z == None %}
      {% set null = offsets.update({'z': 0}) %}
    {% endif %}
    {% set null = offsets.update({'z': (offsets.z | float) + (params.Z_ADJUST | float)}) %}
  {% endif %}
  _SET_GCODE_OFFSET {% for p in params %}{'%s=%s '% (p, params[p])}{% endfor %}
  SAVE_VARIABLE VARIABLE=gcode_offsets VALUE="{offsets}"

[gcode_macro Z_OFFSET_APPLY_ENDSTOP]
description: Apply Gcode Offsets to Endstops
rename_existing: _Z_OFFSET_APPLY_ENDSTOP
gcode:
  _Z_OFFSET_APPLY_ENDSTOP
  SET_GCODE_OFFSET Z=0


##################################################
# Fans Control
##################################################

[gcode_macro M106]
description: Fans Control
rename_existing: M106.1
gcode:
  {% if 'S' in params %}
    {% set fan_speed = params.S|default(0)|int %}
    {% if 'P' in params and params.P == '3' %}
      {% set fan_value = fan_speed / 255.0 %}
      SET_FAN_SPEED FAN=chamber_fan SPEED={fan_value}
    {% else %}
      M106.1 S{fan_speed}
    {% endif %}
  {% else %}
    M106.1 S0
    SET_FAN_SPEED FAN=chamber_fan SPEED=0.0
  {% endif %}


##################################################
# Slicer Controls Management
##################################################

[gcode_macro M204]
description: Sets maximum acceleration
rename_existing: M204.1
gcode:
  {% if 'S' in params %}
    {% set s = params.S|float %}
    SET_VELOCITY_LIMIT ACCEL={s}
  {% else %}
    {% if 'P' in params %}
      {% set p = params.P|float %}
      {% if 'T' in params %}
        {% set t = params.T|float %}
        {% if p < t %}
          SET_VELOCITY_LIMIT ACCEL={p}
        {% else %}
          SET_VELOCITY_LIMIT ACCEL={t}
        {% endif %}
      {% else %}
        SET_VELOCITY_LIMIT ACCEL={p}
      {% endif %}
    {% elif 'T' in params %}
      {% set t = params.T|float %}
      SET_VELOCITY_LIMIT ACCEL={t}
    {% endif %}
  {% endif %}

[gcode_macro M205]
description: Sets Square Corner Velocity
gcode:
  {% if 'X' in params %}
  SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.X}
  {% elif 'Y' in params %}
  SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.Y}
  {% endif %}

[gcode_macro M140]
description: Set Bed Temperature
rename_existing: M140.1
variable_inner_bed_only: 0
gcode:
  {% if 'S' in params %}
    {% set temp = params.S|float %}
    {% if 'B' in params %}
      {% set bed = params.B|int %}
      M140.1 B{bed} S{temp}
    {% elif inner_bed_only == 1 %}
      M140.1 B0 S{temp}
    {% else %}
      M140.1 S{temp}
    {% endif %}
  {% endif %}


##################################################
# Backup & Restore
##################################################

[gcode_shell_command Klipper_Backup]
command: bash /home/pi/flsun-os/macros/backup-restore.sh -backup_klipper
timeout: 10.0
verbose: true

[gcode_shell_command Klipper_Restore]
command: bash /home/pi/flsun-os/macros/backup-restore.sh -restore_klipper
timeout: 10.0
verbose: true

[gcode_shell_command Moonraker_Backup]
command: bash /home/pi/flsun-os/macros/backup-restore.sh -backup_moonraker
timeout: 10.0
verbose: true

[gcode_shell_command Moonraker_Restore]
command: bash /home/pi/flsun-os/macros/backup-restore.sh -restore_moonraker
timeout: 10.0
verbose: true

[gcode_macro _KLIPPER_BACKUP]
gcode:
  RUN_SHELL_COMMAND CMD=Klipper_Backup
  RESPOND TYPE=command MSG="action:prompt_end"

[gcode_macro _KLIPPER_RESTORE]
gcode:
  RUN_SHELL_COMMAND CMD=Klipper_Restore
  RESPOND TYPE=command MSG="action:prompt_end"

[gcode_macro _MOONRAKER_BACKUP]
gcode:
  RUN_SHELL_COMMAND CMD=Moonraker_Backup
  RESPOND TYPE=command MSG="action:prompt_end"

[gcode_macro _MOONRAKER_RESTORE]
gcode:
  RUN_SHELL_COMMAND CMD=Moonraker_Restore
  RESPOND TYPE=command MSG="action:prompt_end"

[gcode_macro MANAGE_KLIPPER_CONFIGURATION]
description: Backup & Restore Klipper configuration files
gcode:
  RESPOND TYPE=command MSG="action:prompt_begin Manage Klipper configuration files"
  RESPOND TYPE=command MSG="action:prompt_text What do you want to do with Klipper configuration files?"
  RESPOND TYPE=command MSG="action:prompt_text BACKUP: Create a backup of the Klipper configuration files named backup_klipper.zip."
  RESPOND TYPE=command MSG="action:prompt_text RESTORE: Restore Klipper configuration files from backup_klipper.zip file."
  RESPOND TYPE=command MSG="action:prompt_footer_button CANCEL|RESPOND TYPE=command MSG="action:prompt_end"|warning"
  RESPOND TYPE=command MSG="action:prompt_footer_button RESTORE|_KLIPPER_RESTORE|primary"
  RESPOND TYPE=command MSG="action:prompt_footer_button BACKUP|_KLIPPER_BACKUP|primary"
  RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro MANAGE_MOONRAKER_DATABASE]
description: Backup & Restore Moonraker database
gcode:
  RESPOND TYPE=command MSG="action:prompt_begin Manage Moonraker database"
  RESPOND TYPE=command MSG="action:prompt_text What do you want to do with Moonraker database?"
  RESPOND TYPE=command MSG="action:prompt_text BACKUP: Create a backup of the Moonraker database named backup_moonraker.zip."
  RESPOND TYPE=command MSG="action:prompt_text RESTORE: Restore Moonraker database from backup_moonraker.zip file."
  RESPOND TYPE=command MSG="action:prompt_footer_button CANCEL|RESPOND TYPE=command MSG="action:prompt_end"|warning"
  RESPOND TYPE=command MSG="action:prompt_footer_button RESTORE|_MOONRAKER_RESTORE|primary"
  RESPOND TYPE=command MSG="action:prompt_footer_button BACKUP|_MOONRAKER_BACKUP|primary"
  RESPOND TYPE=command MSG="action:prompt_show"


##################################################
# Misc
##################################################

[gcode_macro M117]
description: Display Message in Console
rename_existing: M117.1
gcode:
  {% if rawparams %}
    {% set escaped_msg = rawparams.split(';', 1)[0].split('\x23', 1)[0]|replace('"', '\"') %}
    SET_DISPLAY_TEXT MSG="{escaped_msg}"
    RESPOND TYPE=command MSG="{escaped_msg}"
  {% else %}
    SET_DISPLAY_TEXT
  {% endif %}

[gcode_macro RESTORE_E_CURRENT]
description: Restore Extruder Current
gcode:
  SET_TMC_CURRENT STEPPER=extruder CURRENT=1.2

[gcode_macro _SHUTDOWN]
description: Shutdown Machine
gcode:
  {% if printer.configfile.settings['neopixel chamber_led'] %}
    _NEOPIXELS_OFF
  {% else %}
    _CHAMBER_LED_OFF
  {% endif %}
  {action_call_remote_method("shutdown_machine")}

[gcode_macro _REBOOT]
description: Restart Machine
gcode:
  RESPOND TYPE=command MSG="action:prompt_end"
  {action_call_remote_method("reboot_machine")}

[delayed_gcode WAIT_COOLING]
initial_duration: 0
gcode:
  M106 S0
  UPDATE_DELAYED_GCODE ID=WAIT_COOLING DURATION=0

[delayed_gcode LOAD_BED_MESH]
initial_duration: .01
gcode:
  BED_MESH_PROFILE LOAD=default

[delayed_gcode LOAD_VARIABLES]
initial_duration: 3
gcode:
  {% if printer.save_variables.variables.gcode_offsets %}
    {% set offsets = printer.save_variables.variables.gcode_offsets %}
    _SET_GCODE_OFFSET {% for axis, offset in offsets.items() if offsets[axis] %}{ "%s=%s " % (axis, offset) }{% endfor %}
    { action_respond_info("Loaded Z-Offset from saved variables: %s mm" % (offsets.z)) }
  {% endif %}
  {% if ((printer.save_variables.variables.auto_update_check == 1) or (printer.save_variables.variables.update_available == 1))
  and (not printer.save_variables.variables.reconfigure_needed) 
  and (not printer.save_variables.variables.was_interrupted) 
  and (not printer.save_variables.variables.delta_calibrate) 
  and (not printer.save_variables.variables.bed_mesh_calibrate) 
  and (not printer.save_variables.variables.shaper_calibrate) %}
    G4 P5000
    RUN_SHELL_COMMAND CMD=check_updates_silent
  {% endif %}
  {% if printer.save_variables.variables.reconfigure_needed
  and (not printer.save_variables.variables.was_interrupted) 
  and (not printer.save_variables.variables.delta_calibrate) 
  and (not printer.save_variables.variables.bed_mesh_calibrate) 
  and (not printer.save_variables.variables.shaper_calibrate) %}
    G4 P5000
	PRINTER_SETUP_WIZARD
  {% endif %}
  {% if printer.save_variables.variables.delta_calibrate %}
    SAVE_VARIABLE VARIABLE=delta_calibrate VALUE=False
    RESPOND MSG="Delta Calibration done! Bed Leveling will be performed."
    _CALIBRATION_BED_LEVELING_2
  {% endif %}
  {% if printer.save_variables.variables.bed_mesh_calibrate %}
    SAVE_VARIABLE VARIABLE=bed_mesh_calibrate VALUE=False
    RESPOND MSG="Bed Leveling done!"
  {% endif %}
  {% if printer.save_variables.variables.shaper_calibrate %}
    SAVE_VARIABLE VARIABLE=shaper_calibrate VALUE=False
    RESPOND MSG="Resonances Calibration done!"
  {% endif %}
  {% if printer.save_variables.variables.was_interrupted %}
    G4 P5000
    RESPOND TYPE=command MSG="action:prompt_begin Power Loss Recovery"
    RESPOND TYPE=command MSG="action:prompt_text A power loss has occurred!"
    RESPOND TYPE=command MSG="action:prompt_text Do you want to resume current print?"
    RESPOND TYPE=command MSG="action:prompt_footer_button CANCEL PRINT|_CANCEL_PLR|error"
    RESPOND TYPE=command MSG="action:prompt_footer_button RESUME PRINT|RESUME_PRINT_AFTER_PLR|primary"
    RESPOND TYPE=command MSG="action:prompt_show"
  {% endif %}
  {% if printer.save_variables.variables.adaptive_bed_mesh == 1 %}
    SAVE_VARIABLE VARIABLE=adaptive_bed_mesh VALUE=1
    SAVE_VARIABLE VARIABLE=full_bed_mesh VALUE=0
  {% elif printer.save_variables.variables.full_bed_mesh == 1 %}
    SAVE_VARIABLE VARIABLE=adaptive_bed_mesh VALUE=0
    SAVE_VARIABLE VARIABLE=full_bed_mesh VALUE=1
  {% else %}
    SAVE_VARIABLE VARIABLE=adaptive_bed_mesh VALUE=0
    SAVE_VARIABLE VARIABLE=full_bed_mesh VALUE=0
  {% endif %}
  {% if printer.save_variables.variables.adaptive_bed_heating == 0 %}
    SAVE_VARIABLE VARIABLE=adaptive_bed_heating VALUE=0
  {% else %}
    SAVE_VARIABLE VARIABLE=adaptive_bed_heating VALUE=1
  {% endif %}

[gcode_macro _CANCEL_PLR]
description: Cancel Power Loss Recovery
gcode:
  RESPOND TYPE=command MSG=action:prompt_end
  _CLEAR_POWER_LOSS_PARAMS

[gcode_shell_command Screenshot]
command: bash /home/pi/flsun-os/macros/screenshot.sh
timeout: 10.0
verbose: false

[gcode_macro _SCREENSHOT]
description: Take a screenshot of KlipperScreen
gcode:
  RUN_SHELL_COMMAND CMD=Screenshot

[gcode_macro _PWR_KEY]
description: Short press for power button
gcode:
  M117 Short Press done!
