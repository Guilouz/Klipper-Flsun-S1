#  __  __                          
# |  \/  |                         
# | \  / | __ _  ___ _ __ ___  ___ 
# | |\/| |/ _` |/ __| '__/ _ \/ __|
# | |  | | (_| | (__| | | (_) \__ \
# |_|  |_|\__,_|\___|_|  \___/|___/
#
# Macros Configurations - FLSUN S1
# For Open Source Edition
# Version: 1.1


##################################################
# Pause / Resume / Cancel Print
##################################################

[gcode_macro PAUSE]
description: Pause Print
rename_existing: PAUSE_BASE
gcode:
  {% set file_position = printer.virtual_sdcard.file_position %}
  SAVE_VARIABLE VARIABLE=file_position VALUE={file_position}
  {% set e_pos = printer.gcode_move.gcode_position.e %}
  SAVE_VARIABLE VARIABLE=e_pos VALUE={e_pos}
  {% set x_pos = printer.gcode_move.gcode_position.x %}
  SAVE_VARIABLE VARIABLE=x_pos VALUE={x_pos}
  {% set y_pos = printer.gcode_move.gcode_position.y %}
  SAVE_VARIABLE VARIABLE=y_pos VALUE={y_pos}
  {% set z_pos = printer.gcode_move.gcode_position.z %}
  SAVE_VARIABLE VARIABLE=z_pos VALUE={z_pos}
  {% set print_duration = printer.print_stats.print_duration %}
  SAVE_VARIABLE VARIABLE=print_duration VALUE={print_duration}
  {% set fan_speed = printer.fan.speed|float %}
  SAVE_VARIABLE VARIABLE=fan_speed VALUE={fan_speed}
  {% set nozzle_temp = printer.extruder.target|float %}
  SAVE_VARIABLE VARIABLE=nozzle_temp VALUE={nozzle_temp}
  {% set bed_temp = printer.heater_bed.target|float %}
  SAVE_VARIABLE VARIABLE=bed_temp VALUE={bed_temp}
  SAVE_VARIABLE VARIABLE=was_interrupted VALUE=True    
  {% if printer.print_stats.state == "printing" %}
    {% set x = params.X|default(0) %}
    {% set y = params.Y|default(-140) %}
    {% set z = params.Z|default(10)|float %}
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
      {% set z_safe = lift_z %}
    {% else %}
      {% set z_safe = max_z - act_z %}
    {% endif %}
	{% set fan_speed = printer.fan.speed|float %}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=fan_speed VALUE={fan_speed}
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-1 F2100
    {% else %}
      RESPOND TYPE=error MSG="Extruder not hot enought!"
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe}
      G90
      G1 X{x} Y{y} F6000
    {% else %}
      RESPOND TYPE=error MSG="Printer not homed!"
    {% endif %}
	{% set nozzle_temp = printer.extruder.target|float %}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=nozzle_temp VALUE={nozzle_temp}
    M104 S90
	M106 S128
	M400
  {% endif %}

[gcode_macro RESUME]
description: Resume Print
rename_existing: RESUME_BASE
variable_fan_speed: 0
variable_nozzle_temp: 0
variable_m600_state: 0
gcode:
  {% if printer.print_stats.state == "paused" %}
    M109 S{nozzle_temp}
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY) %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    {% if printer['gcode_macro RESUME'].m600_state != 1 %}
      G91
      {% if nozzle_temp >= 180 %}
        G1 E1 F2100
      {% else %}
        RESPOND TYPE=error MSG="Extruder not hot enought!"
      {% endif %}
      G90
      M400
    {% endif %}
    SAVE_VARIABLE VARIABLE=was_interrupted VALUE=False
    {% set fan_speed = fan_speed * 255 %}
    M106 S{fan_speed}
    {% if printer['gcode_macro RESUME'].m600_state != 0 %}
      SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=m600_state VALUE=0
      SET_IDLE_TIMEOUT TIMEOUT=172800
      RESPOND TYPE=command MSG="action:prompt_end"
    {% endif %}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=fan_speed VALUE=0
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=nozzle_temp VALUE=0
    RESPOND MSG="Resuming printing..."
    _SCREEN_LED_ON R=0 O=0 W=1
    RESUME_BASE {get_params}
  {% endif %}

[gcode_macro CANCEL_PRINT]
description: Cancel Print
rename_existing: CANCEL_PRINT_BASE
gcode:
  {% set x = params.X|default(0) %}
  {% set y = params.Y|default(0) %}
  {% set z = params.Z|default(10)|float %}
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% set lift_z = z|abs %}
  {% if act_z < (max_z - lift_z) %}
    {% set z_safe = lift_z %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  {% if printer['gcode_macro RESUME'].m600_state != 0 %}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=m600_state VALUE=0
    SET_IDLE_TIMEOUT TIMEOUT=172800
    RESPOND TYPE=command MSG="action:prompt_end"
  {% endif %}
  M106 S0
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
  SET_FAN_SPEED FAN=chamber_fan SPEED=0.0
  M105 S1
  M106 S128
  UPDATE_DELAYED_GCODE ID=WAIT_COOLING DURATION=60
  G91
  G1 Z{z_safe}
  G90
  G1 X{x} Y{y} F6000
  G28


##################################################
# Filament / Color Change
##################################################

[gcode_macro M600]
description: Filament Change
gcode:
  {% set x = params.X|default(0) %}
  {% set y = params.Y|default(-140) %}
  {% set z = params.Z|default(10)|float %}
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% set lift_z = z|abs %}
  {% if act_z < (max_z - lift_z) %}
    {% set z_safe = lift_z %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=m600_state VALUE=1
  {% set nozzle_temp = printer.extruder.target|float %}
  SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=nozzle_temp VALUE={nozzle_temp}
  {% set fan_speed = printer.fan.speed|float %}
  SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=fan_speed VALUE={fan_speed}
  RESPOND MSG="Print paused for filament change!"
  _SCREEN_LED_ON R=1 O=0 W=0
  PAUSE_BASE
  G91
  {% if nozzle_temp >= 180 %}
    G1 E-1 F2100
  {% else %}
    RESPOND TYPE=error MSG="Extruder not hot enought!"
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe}
    G90
    G1 X{x} Y{y} F6000
  {% else %}
    RESPOND TYPE=error MSG="Printer not homed!"
  {% endif %}
  M107
  SET_FAN_SPEED FAN=chamber_fan SPEED=0
  RESPOND MSG="Load new filament before resume!"
  SET_IDLE_TIMEOUT TIMEOUT=900
  RESPOND TYPE=command MSG="action:prompt_begin Filament change detected!"
  RESPOND TYPE=command MSG="action:prompt_text A necessary filament change has been detected. Please replace filament, LOAD it and click RESUME button."
  RESPOND TYPE=command MSG="action:prompt_button UNLOAD FILAMENT|_UNLOAD_FILAMENT_M600|secondary"
  RESPOND TYPE=command MSG="action:prompt_button LOAD FILAMENT|_LOAD_FILAMENT_M600|secondary"
  RESPOND TYPE=command MSG="action:prompt_button PURGE MORE FILAMENT|_PURGE_MORE_M600|secondary"
  RESPOND TYPE=command MSG="action:prompt_footer_button CANCEL PRINT|CANCEL_PRINT|error"
  RESPOND TYPE=command MSG="action:prompt_footer_button IGNORE|RESPOND TYPE=command MSG=action:prompt_end|warning"
  RESPOND TYPE=command MSG="action:prompt_footer_button RESUME|RESUME|primary"
  RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro _LOAD_FILAMENT_M600]
description: Load Filament for M600
gcode:
  _SCREEN_LED_ON R=1 O=1 W=1
  M109 S{printer['gcode_macro RESUME'].nozzle_temp|int}
  RESPOND MSG="Loading filament..."
  G91
  G1 E40 F800
  G1 E30 F300
  G90
  M400
  SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
  RESPOND MSG="Loading done!"
  _SCREEN_LED_ON R=1 O=0 W=1

[gcode_macro _UNLOAD_FILAMENT_M600]
description: Unload Filament for M600
gcode:
  _SCREEN_LED_ON R=1 O=1 W=1
  M109 S{printer['gcode_macro RESUME'].nozzle_temp|int}
  RESPOND MSG="Unloading filament..."
  G91
  G1 E10 F300
  G1 E-100 F200
  G90
  M400
  SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
  RESPOND MSG="Unloading done!"
  _SCREEN_LED_ON R=1 O=0 W=1

[gcode_macro _PURGE_MORE_M600]
description: Purge More Filament for M600
gcode:
  _SCREEN_LED_ON R=1 O=1 W=1
  M109 S{printer['gcode_macro RESUME'].nozzle_temp|int}
  RESPOND MSG="Purging filament..."
  G91
  G1 E10 F180
  G90
  M400
  SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
  RESPOND MSG="Purging done!"
  _SCREEN_LED_ON R=1 O=0 W=1

[gcode_macro _PAUSE_AFTER_DISTANCE]
description: Pause printing after a certain length of extruded filament
variable_end_d: 0
variable_was_paused: 0
gcode:
  {% set d_start = printer.print_stats.filament_used|float %}
  {% set d_end = (d_start + params.D|float)|float %}
  SET_GCODE_VARIABLE MACRO=_PAUSE_AFTER_DISTANCE VARIABLE=end_d VALUE={d_end}
  RESPOND MSG="Pause will be done when {d_end|round(2)}mm of filament have been extruded."
  UPDATE_DELAYED_GCODE ID=PAUSE_AT_DISTANCE DURATION=1

[delayed_gcode PAUSE_AT_DISTANCE]
initial_duration: 0
gcode:
  {% if printer.print_stats.state == "printing" %}
    {% set was_paused = printer["gcode_macro _PAUSE_AFTER_DISTANCE"].was_paused %}
    {% if was_paused %}
      {% if printer["filament_switch_sensor _filament_sensor"].filament_detected %}
        RESPOND MSG="Filament replaced! Pause canceled."
        SET_GCODE_VARIABLE MACRO=_PAUSE_AFTER_DISTANCE VARIABLE=was_paused value=0
        UPDATE_DELAYED_GCODE ID=PAUSE_AT_DISTANCE DURATION=0
      {% else %}
        RESPOND MSG="Filament not replaced... Pause will be done."
        SET_GCODE_VARIABLE MACRO=_PAUSE_AFTER_DISTANCE VARIABLE=was_paused value=0
        UPDATE_DELAYED_GCODE ID=PAUSE_AT_DISTANCE DURATION=1
      {% endif %}
    {% else %}
      {% set d_current = printer.print_stats.filament_used|float %}
      {% if d_current < printer["gcode_macro _PAUSE_AFTER_DISTANCE"].end_d %}
        UPDATE_DELAYED_GCODE ID=PAUSE_AT_DISTANCE DURATION=1
      {% else %}
        UPDATE_DELAYED_GCODE ID=PAUSE_AT_DISTANCE DURATION=0
        M600
      {% endif %}
    {% endif %}
  {% else %}
    {% if printer.print_stats.state == "paused" %}
      SET_GCODE_VARIABLE MACRO=_PAUSE_AFTER_DISTANCE VARIABLE=was_paused value=1
      UPDATE_DELAYED_GCODE ID=PAUSE_AT_DISTANCE DURATION=1
    {% else %}
      RESPOND MSG="Filament not replaced... Pause canceled because print was stopped."
      SET_GCODE_VARIABLE MACRO=_PAUSE_AFTER_DISTANCE VARIABLE=was_paused value=0
      UPDATE_DELAYED_GCODE ID=PAUSE_AT_DISTANCE DURATION=0
    {% endif %}
  {% endif %}


##################################################
# Load / Unload Filament
##################################################

[gcode_macro LOAD_FILAMENT]
description: Load Filament
gcode:
  {% set HOTEND_TEMP=params.HOTEND_TEMP|default(240)|float %}
  M109 S{HOTEND_TEMP}
  RESPOND MSG="Loading filament..."
  G91
  G1 E40 F1500
  G1 E30 F500
  G90
  SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
  RESPOND MSG="Loading done!"

[gcode_macro UNLOAD_FILAMENT]
description: Unload Filament
gcode:
  RESPOND TYPE=command MSG="action:prompt_begin Unload Filament"
  RESPOND TYPE=command MSG="action:prompt_text TO PREVENT EXTRUDER CLOG, FOLLOW THESE STEPS:"
  RESPOND TYPE=command MSG="action:prompt_text 1. Unclip the PTFE tube and press the lower spring clip of the PTFE connector."
  RESPOND TYPE=command MSG="action:prompt_text 2. Remove the PTFE tube from the PTFE connector."
  RESPOND TYPE=command MSG="action:prompt_text 3. Cut the filament and press UNLOAD button."
  RESPOND TYPE=command MSG="action:prompt_footer_button CANCEL|RESPOND TYPE=command MSG=action:prompt_end|warning"
  RESPOND TYPE=command MSG="action:prompt_footer_button UNLOAD|_UNLOAD_FILAMENT|primary"
  RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro _UNLOAD_FILAMENT]
description: Unload Filament
gcode:
  {% set HOTEND_TEMP=params.HOTEND_TEMP|default(240)|float %}
  M109 S{HOTEND_TEMP}
  RESPOND MSG="Unloading filament..."
  G91
  G1 E10 F500
  G1 E-20 F3000
  G1 E-45 F1500
  G90
  SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
  RESPOND MSG="Unloading done!"

[gcode_macro _KS_LOAD_FILAMENT]
description: Load Filament for KlipperScreen
gcode:
  G91
  G1 E40 F1500
  G1 E30 F500
  G90
  SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0

[gcode_macro _KS_UNLOAD_FILAMENT]
description: Unload Filament for KlipperScreen
gcode:
  G91
  G1 E10 F500
  G1 E-20 F3000
  G1 E-45 F1500
  G90
  SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0


##################################################
# Calibrations
##################################################

[gcode_macro CALIBRATION_MOTORS]
description: Start Motors Calibration
gcode:
  {% if printer.idle_timeout.state == "Printing" %}
    RESPOND TYPE=error MSG="This macro cannot be used while printing!"
  {% else %}
    _SCREEN_LED_ON R=1 O=1 W=0
    RESPOND MSG="Starting Motors Calibration..."
    {% if printer.toolhead.homed_axes != "xyz" %}
      G28
    {% endif %}
    G90
    G1 X0 Y0 Z10 F6000
    _CALIBRATION_MOTORS_CLEAN
    _CALIBRATION_MOTORS_DATA
    RESPOND MSG="Motors A, B and C are OK!"
    G28
    RESPOND MSG="Motors Calibration done!"
    _SCREEN_LED_ON R=0 O=0 W=1
  {% endif %}

[gcode_macro _CALIBRATION_MOTORS_CLEAN]
description: Clean Motors Data
gcode:
  M18
  SET_PIN PIN=_motor_cali_a VALUE=0
  SET_PIN PIN=_motor_cali_b VALUE=0
  SET_PIN PIN=_motor_cali_c VALUE=0
  G4 P290
  SET_PIN PIN=_motor_cali_a VALUE=1
  SET_PIN PIN=_motor_cali_b VALUE=1
  SET_PIN PIN=_motor_cali_c VALUE=1
  G4 P290
  SET_PIN PIN=_motor_cali_a VALUE=0
  SET_PIN PIN=_motor_cali_b VALUE=0
  SET_PIN PIN=_motor_cali_c VALUE=0
  G4 P290
  SET_PIN PIN=_motor_cali_a VALUE=1
  SET_PIN PIN=_motor_cali_b VALUE=1
  SET_PIN PIN=_motor_cali_c VALUE=1
  G4 P290
  SET_PIN PIN=_motor_cali_a VALUE=0
  SET_PIN PIN=_motor_cali_b VALUE=0
  SET_PIN PIN=_motor_cali_c VALUE=0
  G4 P290
  SET_PIN PIN=_motor_cali_a VALUE=1
  SET_PIN PIN=_motor_cali_b VALUE=1
  SET_PIN PIN=_motor_cali_c VALUE=1
  G4 P290
  SET_PIN PIN=_motor_cali_a VALUE=0
  SET_PIN PIN=_motor_cali_b VALUE=0
  SET_PIN PIN=_motor_cali_c VALUE=0
  G4 P290

[gcode_macro _CALIBRATION_MOTORS_DATA]
description: Motors Calibration
gcode:
  M18
  M17
  M18
  SET_PIN PIN=_motor_cali_a VALUE=0
  SET_PIN PIN=_motor_cali_b VALUE=0
  SET_PIN PIN=_motor_cali_c VALUE=0
  G4 P200
  SET_PIN PIN=_motor_cali_c VALUE=1
  SET_PIN PIN=_motor_cali_a VALUE=1
  SET_PIN PIN=_motor_cali_b VALUE=1
  G4 P200
  SET_PIN PIN=_motor_cali_b VALUE=0
  SET_PIN PIN=_motor_cali_c VALUE=0
  SET_PIN PIN=_motor_cali_a VALUE=0
  G4 P200
  SET_PIN PIN=_motor_cali_a VALUE=1
  SET_PIN PIN=_motor_cali_b VALUE=1
  SET_PIN PIN=_motor_cali_c VALUE=1
  G4 P200
  SET_PIN PIN=_motor_cali_c VALUE=0
  SET_PIN PIN=_motor_cali_a VALUE=0
  SET_PIN PIN=_motor_cali_b VALUE=0
  G4 P200
  SET_PIN PIN=_motor_cali_b VALUE=1
  SET_PIN PIN=_motor_cali_c VALUE=1
  SET_PIN PIN=_motor_cali_a VALUE=1
  G4 P200
  SET_PIN PIN=_motor_cali_a VALUE=0
  SET_PIN PIN=_motor_cali_b VALUE=0
  SET_PIN PIN=_motor_cali_c VALUE=0
  G4 P200
  SET_PIN PIN=_motor_cali_c VALUE=1
  SET_PIN PIN=_motor_cali_a VALUE=1
  SET_PIN PIN=_motor_cali_b VALUE=1
  G4 P200
  SET_PIN PIN=_motor_cali_b VALUE=0
  SET_PIN PIN=_motor_cali_c VALUE=0
  SET_PIN PIN=_motor_cali_a VALUE=0
  G4 P200
  SET_PIN PIN=_motor_cali_a VALUE=1
  SET_PIN PIN=_motor_cali_b VALUE=1
  SET_PIN PIN=_motor_cali_c VALUE=1
  G4 P200
  SET_PIN PIN=_motor_cali_c VALUE=0
  SET_PIN PIN=_motor_cali_a VALUE=0
  SET_PIN PIN=_motor_cali_b VALUE=0
  M17
  G4 P30000

[gcode_macro CALIBRATION_Z_OFFSET]
description: Start Z-Offset Calibration
gcode:
  {% if printer.idle_timeout.state == "Printing" %}
    RESPOND TYPE=error MSG="This macro cannot be used while printing!"
  {% else %}
    RESPOND MSG="Starting Z-Offset Calibration..."
    SET_GCODE_OFFSET Z=0
    G28
    G90
    G1 X0 Y0 Z50 F6000
    M400
    PROBE_CALIBRATE
  {% endif %}

[gcode_macro CALIBRATION_BED]
description: Start Delta Calibration & Bed Leveling
gcode:
  {% if printer.idle_timeout.state == "Printing" %}
    RESPOND TYPE=error MSG="This macro cannot be used while printing!"
  {% else %}
    _SCREEN_LED_ON R=1 O=1 W=0
    {% set BED_TEMP=params.BED_TEMP|default(60)|float %}
    {% set HOTEND_TEMP=params.HOTEND_TEMP|default(140)|float %}
    SET_GCODE_OFFSET Z=0
    BED_MESH_CLEAR
    G28
    M204 S200
    RESPOND MSG="Starting heating..."
    M140 S{BED_TEMP}
    M190 S{BED_TEMP}
    M109 S{HOTEND_TEMP}
    RESPOND MSG="Starting Delta Calibration..."
    DELTA_CALIBRATE
    G1 X0 Y0 Z50 F4200
    G28
    SAVE_VARIABLE VARIABLE=delta_calibrate VALUE=True
    SAVE_CONFIG
  {% endif %}

[gcode_macro _CALIBRATION_BED_LEVELING_2]
description: Start Bed Leveling
gcode:
  {% if printer.idle_timeout.state == "Printing" %}
    RESPOND TYPE=error MSG="This macro cannot be used while printing!"
  {% else %}
    _SCREEN_LED_ON R=1 O=1 W=0
    {% set BED_TEMP=params.BED_TEMP|default(60)|float %}
    {% set HOTEND_TEMP=params.HOTEND_TEMP|default(140)|float %}
    G28
    M204 S200
    RESPOND MSG="Starting heating..."
    M140 S{BED_TEMP}
    M190 S{BED_TEMP}
    M109 S{HOTEND_TEMP}
    RESPOND MSG="Starting Bed Leveling..."
    G1 X0 Y0 Z50 F4200
    BED_MESH_CALIBRATE
    G1 X0 Y0 Z50 F4200
    G28
    SAVE_VARIABLE VARIABLE=bed_mesh_calibrate VALUE=True
    SAVE_CONFIG
  {% endif %}

[gcode_macro CALIBRATION_RESONANCES]
description: Start Measuring Resonances
gcode:
  {% if printer.idle_timeout.state == "Printing" %}
    RESPOND TYPE=error MSG="This macro cannot be used while printing!"
  {% else %}
    _SCREEN_LED_ON R=1 O=1 W=0
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
    RESPOND MSG="Starting Resonances Calibration..."
    {% if printer.toolhead.homed_axes != "xyz" %}
      G28
    {% endif %}
    SHAPER_CALIBRATE
    G28
    SAVE_VARIABLE VARIABLE=shaper_calibrate VALUE=True
    SAVE_CONFIG
  {% endif %}

[gcode_macro CALIBRATION_PID_BED]
description: Start Bed PID Calibration
gcode:
  {% set BED_TEMP=params.BED_TEMP|default(120)|float %}
  {% if printer.idle_timeout.state == "Printing" %}
    RESPOND TYPE=error MSG="This macro cannot be used while printing!"
  {% else %}
    _SCREEN_LED_ON R=1 O=1 W=0
    {% if printer.toolhead.homed_axes != "xyz" %}
      G28
    {% endif %}
    G90
    G1 Z50 F6000
    M400
    M106 S255
    RESPOND MSG="Starting PID Calibration for inner bed..."
    PID_CALIBRATE HEATER=heater_bed TARGET={BED_TEMP}
    RESPOND MSG="Start heating inner bed..."
    M190 S{BED_TEMP}
    RESPOND MSG="Starting PID Calibration for outer bed..."
    PID_CALIBRATE HEATER=heater_bed_2 TARGET={BED_TEMP}
    M107
    G28
    M400
    RESPOND MSG="Bed PID calibration done!"
    SAVE_CONFIG
  {% endif %}

[gcode_macro CALIBRATION_PID_HOTEND]
description: Start Hotend PID Calibration
gcode:
  {% set HOTEND_TEMP=params.HOTEND_TEMP|default(350)|float %}
  {% if printer.idle_timeout.state == "Printing" %}
    RESPOND TYPE=error MSG="This macro cannot be used while printing!"
  {% else %}
    _SCREEN_LED_ON R=1 O=1 W=0
    RESPOND MSG="Starting Hotend PID calibration..."
    {% if printer.toolhead.homed_axes != "xyz" %}
      G28
    {% endif %}
    G90
    G1 Z50 F6000
    M400
    M106 S255
    PID_CALIBRATE HEATER=extruder TARGET={HOTEND_TEMP}
    M107
    G28
    M400
    RESPOND MSG="Hotend PID calibration done!"
    SAVE_CONFIG
  {% endif %}

[gcode_macro _PID_KS_START]
description: PID for KlipperScreen
gcode:
  _SCREEN_LED_ON R=1 O=1 W=0
  RESPOND MSG="Starting Bed PID calibration..."
  {% if printer.toolhead.homed_axes != "xyz" %}
    G28
  {% endif %}
  G90
  G1 Z50 F6000
  M400
  M106 S255

[gcode_macro _PID_KS_END]
description: PID for KlipperScreen
gcode:
  M107
  G28
  M400
  RESPOND MSG="Hotend PID calibration done!"
  SAVE_CONFIG

[gcode_macro CALIBRATION_X_OFFSET]
description: Apply a deviation in X axis
gcode:
  {% set MESURED_SIZE=params.MESURED_SIZE|default(0)|float %}
  {% set TARGET_SIZE=params.TARGET_SIZE|default(0)|float %}
  M101 X{MESURED_SIZE} T{TARGET_SIZE}

[gcode_macro CALIBRATION_Y_OFFSET]
description: Apply a deviation in Y axis
gcode:
  {% set MESURED_SIZE=params.MESURED_SIZE|default(0)|float %}
  {% set TARGET_SIZE=params.TARGET_SIZE|default(0)|float %}
  M101 Y{MESURED_SIZE} T{TARGET_SIZE}

[gcode_macro CALIBRATION_RESET_XY_OFFSETS]
description: Reset deviations applied to X and Y axis
gcode:
  M101 S0


########################################
# LED
########################################

[gcode_macro CHAMBER_LED_SWITCH]
description: Turn On/Off The Chamber Light
variable_led_state: 1
gcode:
  {% if printer['gcode_macro CHAMBER_LED_SWITCH'].led_state == 0 %}
    _CHAMBER_LED_ON
  {% else %}
    _CHAMBER_LED_OFF
  {% endif %}

[gcode_macro _CHAMBER_LED_ON]
description: Turn On The Chamber Light
gcode:
  SET_LED LED=chamber_led WHITE=1.00 SYNC=0 TRANSMIT=1
  SET_GCODE_VARIABLE MACRO=CHAMBER_LED_SWITCH VARIABLE=led_state VALUE=1

[gcode_macro _CHAMBER_LED_OFF]
description: Turn Off The Chamber Light
gcode:
  SET_LED LED=chamber_led WHITE=0.00 SYNC=0 TRANSMIT=1
  SET_GCODE_VARIABLE MACRO=CHAMBER_LED_SWITCH VARIABLE=led_state VALUE=0

[gcode_macro _SCREEN_LED_ON]
description: Turn On The Screen Lights
gcode:
  SET_PIN PIN=_led_red VALUE={ params.R|default(1) }
  SET_PIN PIN=_led_orange VALUE={ params.O|default(1) }
  SET_PIN PIN=_led_white VALUE={ params.W|default(1) }

[gcode_macro _SCREEN_LED_OFF]
description: Turn Off The Screen Lights
gcode:
  SET_PIN PIN=_led_red VALUE=0
  SET_PIN PIN=_led_orange VALUE=0
  SET_PIN PIN=_led_white VALUE=0


########################################
# Relay
########################################

[gcode_macro _RELAY_ON]
description: Turn On Relay
gcode:
  SET_PIN PIN=_relay VALUE=1

[gcode_macro _RELAY_OFF]
description: Turn Off Relay
gcode:
  SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
  SET_PIN PIN=_relay VALUE=0


########################################
# Drying Box
########################################

[gcode_macro MANAGE_DRYING_BOX]
description: Manage Drying Box
variable_prompt_state: 0
gcode:
  RESPOND TYPE=command MSG="action:prompt_begin Manage Drying Box"
  RESPOND TYPE=command MSG="action:prompt_text How long do you want to heat the Drying Box?"
  RESPOND TYPE=command MSG="action:prompt_button_group_start"
  RESPOND TYPE=command MSG="action:prompt_button 1 HOUR|_START_DRYING_BOX_1|secondary"
  RESPOND TYPE=command MSG="action:prompt_button 2 HOURS|_START_DRYING_BOX_2|secondary"
  RESPOND TYPE=command MSG="action:prompt_button 3 HOURS|_START_DRYING_BOX_3|secondary"
  RESPOND TYPE=command MSG="action:prompt_button_group_end"
  RESPOND TYPE=command MSG="action:prompt_button_group_start"
  RESPOND TYPE=command MSG="action:prompt_button 4 HOURS|_START_DRYING_BOX_4|secondary"
  RESPOND TYPE=command MSG="action:prompt_button 5 HOURS|_START_DRYING_BOX_5|secondary"
  RESPOND TYPE=command MSG="action:prompt_button 6 HOURS|_START_DRYING_BOX_6|secondary"
  RESPOND TYPE=command MSG="action:prompt_button_group_end"
  RESPOND TYPE=command MSG="action:prompt_button_group_start"
  RESPOND TYPE=command MSG="action:prompt_button 7 HOURS|_START_DRYING_BOX_7|secondary"
  RESPOND TYPE=command MSG="action:prompt_button 8 HOURS|_START_DRYING_BOX_8|secondary"
  RESPOND TYPE=command MSG="action:prompt_button 9 HOURS|_START_DRYING_BOX_9|secondary"
  RESPOND TYPE=command MSG="action:prompt_button_group_end"
  RESPOND TYPE=command MSG="action:prompt_footer_button CANCEL|RESPOND TYPE=command MSG=action:prompt_end|warning"
  RESPOND TYPE=command MSG="action:prompt_footer_button RESET|CALIBRATION_SPOOL_WEIGHT|primary"
  RESPOND TYPE=command MSG="action:prompt_footer_button STOP|DRYING_BOX_STOP|error"
  RESPOND TYPE=command MSG="action:prompt_footer_button MANUAL HEATING|_DRYING_BOX_TEMP|primary"
  RESPOND TYPE=command MSG="action:prompt_show"
  SET_GCODE_VARIABLE MACRO=MANAGE_DRYING_BOX VARIABLE=prompt_state VALUE=1

[gcode_macro _DRYING_BOX_TEMP]
description: Manage Drying Box Temperature
variable_prompt_state: 0
gcode:
  RESPOND TYPE=command MSG="action:prompt_begin Manage Drying Box"
  RESPOND TYPE=command MSG="action:prompt_text What temperature do you want to heat the Drying Box?"
  RESPOND TYPE=command MSG="action:prompt_button_group_start"
  RESPOND TYPE=command MSG="action:prompt_button 40C°|_DRYING_BOX_TEMP_1|secondary"
  RESPOND TYPE=command MSG="action:prompt_button 45C°|_DRYING_BOX_TEMP_2|secondary"
  RESPOND TYPE=command MSG="action:prompt_button 50C°|_DRYING_BOX_TEMP_3|secondary"
  RESPOND TYPE=command MSG="action:prompt_button_group_end"
  RESPOND TYPE=command MSG="action:prompt_button_group_start"
  RESPOND TYPE=command MSG="action:prompt_button 55C°|_DRYING_BOX_TEMP_4|secondary"
  RESPOND TYPE=command MSG="action:prompt_button 60C°|_DRYING_BOX_TEMP_5|secondary"
  RESPOND TYPE=command MSG="action:prompt_button 65C°|_DRYING_BOX_TEMP_6|secondary"
  RESPOND TYPE=command MSG="action:prompt_button_group_end"
  RESPOND TYPE=command MSG="action:prompt_footer_button CANCEL|DRYING_BOX_STOP|warning"
  RESPOND TYPE=command MSG="action:prompt_show"
  SET_GCODE_VARIABLE MACRO=_DRYING_BOX_TEMP VARIABLE=prompt_state VALUE=1

[gcode_macro DRYING_BOX_START]
description: Start Drying Box Heating
gcode:
  {% set DRYING_BOX_TEMP=params.DRYING_BOX_TEMP|default(60)|float %}
  SET_HEATER_TEMPERATURE HEATER=drying_box TARGET={DRYING_BOX_TEMP}
  {% if printer['gcode_macro MANAGE_DRYING_BOX'].prompt_state != 0 %}
    RESPOND TYPE=command MSG="action:prompt_end"
    SET_GCODE_VARIABLE MACRO=MANAGE_DRYING_BOX VARIABLE=prompt_state VALUE=0
  {% endif %}

[gcode_macro DRYING_BOX_STOP]
description: Stop Drying Box Heating
gcode:
  SET_HEATER_TEMPERATURE HEATER=drying_box TARGET=0
  UPDATE_DELAYED_GCODE ID=STOP_DRYING_BOX DURATION=0
  {% if printer['gcode_macro MANAGE_DRYING_BOX'].prompt_state != 0 %}
    RESPOND TYPE=command MSG="action:prompt_end"
    SET_GCODE_VARIABLE MACRO=MANAGE_DRYING_BOX VARIABLE=prompt_state VALUE=0
  {% endif %}

[delayed_gcode STOP_DRYING_BOX]
initial_duration: 0
gcode:
  SET_HEATER_TEMPERATURE HEATER=drying_box TARGET=0
  UPDATE_DELAYED_GCODE ID=STOP_DRYING_BOX DURATION=0
  RESPOND TYPE=command MSG="Drying Box heating stopped after delay."

[gcode_macro _START_DRYING_BOX_1]
description: Start Drying Box for 1 Hour
gcode:
  UPDATE_DELAYED_GCODE ID=STOP_DRYING_BOX DURATION=3600
  RESPOND TYPE=command MSG="action:prompt_end"
  _DRYING_BOX_TEMP

[gcode_macro _START_DRYING_BOX_2]
description: Start Drying Box for 2 Hours
gcode:
  UPDATE_DELAYED_GCODE ID=STOP_DRYING_BOX DURATION=7200
  RESPOND TYPE=command MSG="action:prompt_end"
  _DRYING_BOX_TEMP

[gcode_macro _START_DRYING_BOX_3]
description: Start Drying Box for 3 Hours
gcode:
  UPDATE_DELAYED_GCODE ID=STOP_DRYING_BOX DURATION=10800
  RESPOND TYPE=command MSG="action:prompt_end"
  _DRYING_BOX_TEMP

[gcode_macro _START_DRYING_BOX_4]
description: Start Drying Box for 4 Hours
gcode:
  UPDATE_DELAYED_GCODE ID=STOP_DRYING_BOX DURATION=14400
  RESPOND TYPE=command MSG="action:prompt_end"
  _DRYING_BOX_TEMP

[gcode_macro _START_DRYING_BOX_5]
description: Start Drying Box for 5 Hours
gcode:
  UPDATE_DELAYED_GCODE ID=STOP_DRYING_BOX DURATION=18000
  RESPOND TYPE=command MSG="action:prompt_end"
  _DRYING_BOX_TEMP

[gcode_macro _START_DRYING_BOX_6]
description: Start Drying Box for 6 Hours
gcode:
  UPDATE_DELAYED_GCODE ID=STOP_DRYING_BOX DURATION=21600
  RESPOND TYPE=command MSG="action:prompt_end"
  _DRYING_BOX_TEMP

[gcode_macro _START_DRYING_BOX_7]
description: Start Drying Box for 7 Hours
gcode:
  UPDATE_DELAYED_GCODE ID=STOP_DRYING_BOX DURATION=25200
  RESPOND TYPE=command MSG="action:prompt_end"
  _DRYING_BOX_TEMP

[gcode_macro _START_DRYING_BOX_8]
description: Start Drying Box for 8 Hours
gcode:
  UPDATE_DELAYED_GCODE ID=STOP_DRYING_BOX DURATION=28800
  RESPOND TYPE=command MSG="action:prompt_end"
  _DRYING_BOX_TEMP

[gcode_macro _START_DRYING_BOX_9]
description: Start Drying Box for 9 Hours
gcode:
  UPDATE_DELAYED_GCODE ID=STOP_DRYING_BOX DURATION=32400
  RESPOND TYPE=command MSG="action:prompt_end"
  _DRYING_BOX_TEMP

[gcode_macro _DRYING_BOX_TEMP_1]
description: Heat Drying Box at 40°C
gcode:
  SET_HEATER_TEMPERATURE HEATER=drying_box TARGET=40
  {% if printer['gcode_macro _DRYING_BOX_TEMP'].prompt_state != 0 %}
    RESPOND TYPE=command MSG="action:prompt_end"
    SET_GCODE_VARIABLE MACRO=_DRYING_BOX_TEMP VARIABLE=prompt_state VALUE=0
  {% endif %}

[gcode_macro _DRYING_BOX_TEMP_2]
description: Heat Drying Box at 45°C
gcode:
  SET_HEATER_TEMPERATURE HEATER=drying_box TARGET=45
  {% if printer['gcode_macro _DRYING_BOX_TEMP'].prompt_state != 0 %}
    RESPOND TYPE=command MSG="action:prompt_end"
    SET_GCODE_VARIABLE MACRO=_DRYING_BOX_TEMP VARIABLE=prompt_state VALUE=0
  {% endif %}

[gcode_macro _DRYING_BOX_TEMP_3]
description: Heat Drying Box at 50°C
gcode:
  SET_HEATER_TEMPERATURE HEATER=drying_box TARGET=50
  {% if printer['gcode_macro _DRYING_BOX_TEMP'].prompt_state != 0 %}
    RESPOND TYPE=command MSG="action:prompt_end"
    SET_GCODE_VARIABLE MACRO=_DRYING_BOX_TEMP VARIABLE=prompt_state VALUE=0
  {% endif %}

[gcode_macro _DRYING_BOX_TEMP_4]
description: Heat Drying Box at 55°C
gcode:
  SET_HEATER_TEMPERATURE HEATER=drying_box TARGET=55
  {% if printer['gcode_macro _DRYING_BOX_TEMP'].prompt_state != 0 %}
    RESPOND TYPE=command MSG="action:prompt_end"
    SET_GCODE_VARIABLE MACRO=_DRYING_BOX_TEMP VARIABLE=prompt_state VALUE=0
  {% endif %}

[gcode_macro _DRYING_BOX_TEMP_5]
description: Heat Drying Box at 60°C
gcode:
  SET_HEATER_TEMPERATURE HEATER=drying_box TARGET=60
  {% if printer['gcode_macro _DRYING_BOX_TEMP'].prompt_state != 0 %}
    RESPOND TYPE=command MSG="action:prompt_end"
    SET_GCODE_VARIABLE MACRO=_DRYING_BOX_TEMP VARIABLE=prompt_state VALUE=0
  {% endif %}

[gcode_macro _DRYING_BOX_TEMP_6]
description: Heat Drying Box at 65°C
gcode:
  SET_HEATER_TEMPERATURE HEATER=drying_box TARGET=65
  {% if printer['gcode_macro _DRYING_BOX_TEMP'].prompt_state != 0 %}
    RESPOND TYPE=command MSG="action:prompt_end"
    SET_GCODE_VARIABLE MACRO=_DRYING_BOX_TEMP VARIABLE=prompt_state VALUE=0
  {% endif %}

[gcode_shell_command reset_spool_weight]
command: sh /home/pi/flsun-os/drying-box-reset.sh
timeout: 10.0
verbose: False

[gcode_macro CALIBRATION_SPOOL_WEIGHT]
description: Reset Spool Weight Sensor
gcode:
  RESPOND TYPE=command MSG="action:prompt_begin Reset Spool Weight Sensor"
  RESPOND TYPE=command MSG="action:prompt_text There is filament on the spool, but the remaining amount of filament displayed on the screen is significantly different from the actual remaining amount. This is due to an error in the filament weighing sensor and requires calibration."
  RESPOND TYPE=command MSG="action:prompt_text 1 - Take the filament spool out of the Drying Box."
  RESPOND TYPE=command MSG="action:prompt_text 2 - Click on RESET button."
  RESPOND TYPE=command MSG="action:prompt_text 3 - After the reset, replace the filament spool and the correct percentage should be displayed."
  RESPOND TYPE=command MSG="action:prompt_footer_button CANCEL|RESPOND TYPE=command MSG=action:prompt_end|warning"
  RESPOND TYPE=command MSG="action:prompt_footer_button RESET|_RESET_SPOOL_WEIGHT|primary"
  RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro _RESET_SPOOL_WEIGHT]
description: Reset Spool Weight Sensor
gcode:
  RUN_SHELL_COMMAND CMD=reset_spool_weight
  RESPOND TYPE=command MSG="action:prompt_end"
  RESPOND MSG="Spool Weight Sensor has been reset!"


########################################
# Power Loss
########################################
 
[gcode_macro _START_PRINT]
description: Start G-Codes for Power Loss
gcode:
  _RELAY_ON
  {% set sd_filename = printer.virtual_sdcard.file_path|string %}
  SAVE_VARIABLE VARIABLE=sd_filename VALUE='"{sd_filename}"'
  SAVE_VARIABLE VARIABLE=was_interrupted VALUE=False
  SAVE_VARIABLE VARIABLE=file_position VALUE=0
  SAVE_VARIABLE VARIABLE=x_pos VALUE=0.0
  SAVE_VARIABLE VARIABLE=y_pos VALUE=0.0
  SAVE_VARIABLE VARIABLE=z_pos VALUE=0.0
  SAVE_VARIABLE VARIABLE=e_pos VALUE=0.0
  SET_TMC_CURRENT STEPPER=extruder CURRENT=0.8
  SET_VELOCITY_LIMIT ACCEL=40000
  SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=5
  SET_VELOCITY_LIMIT ACCEL_TO_DECEL=6000
  CLEAR_PAUSE
  M105 S1
  _SCREEN_LED_ON R=0 O=0 W=1
  M106 S255
  G4 P5000

[gcode_macro _START_PRINT_RESUME]
description: Resume G-Codes for Power Loss
gcode:
  {% set sd_filename = printer.virtual_sdcard.file_path|string %}
  SAVE_VARIABLE VARIABLE=sd_filename VALUE='"{sd_filename}"'
  SAVE_VARIABLE VARIABLE=was_interrupted VALUE=False
  {% set file_position = printer.save_variables.variables.file_position %}
  SAVE_VARIABLE VARIABLE=file_position VALUE='"{file_position}"'
  {% set x_pos = printer.save_variables.variables.x_pos %}
  SAVE_VARIABLE VARIABLE=x_pos VALUE='"{x_pos}"'
  {% set y_pos = printer.save_variables.variables.y_pos %}
  SAVE_VARIABLE VARIABLE=y_pos VALUE='"{y_pos}"'
  {% set z_pos = printer.save_variables.variables.z_pos %}
  SAVE_VARIABLE VARIABLE=z_pos VALUE='"{z_pos}"'
  {% set e_pos = printer.save_variables.variables.e_pos %}
  SAVE_VARIABLE VARIABLE=e_pos VALUE='"{e_pos}"'
  CLEAR_PAUSE
  M105 S1
  _SCREEN_LED_ON R=0 O=0 W=1
  M114 F0

[gcode_macro _END_PRINT]
description: End G-Codes for Power Loss
gcode:
  SAVE_VARIABLE VARIABLE=was_interrupted VALUE=False
  SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
  M106 S128
  UPDATE_DELAYED_GCODE ID=WAIT_COOLING DURATION=60

[gcode_macro RESUME_PRINT_AFTER_PLR]
description: Resume Print from Power Loss
gcode:
  RESPOND TYPE=command MSG=action:prompt_end
  {% set file_position = printer.save_variables.variables.file_position %}
  {% set e_pos = printer.save_variables.variables.e_pos %}
  {% set x_pos = printer.save_variables.variables.x_pos %}
  {% set y_pos = printer.save_variables.variables.y_pos %}
  {% set z_pos = printer.save_variables.variables.z_pos %}
  {% set last_file = params.GCODE_FILE|default(printer.save_variables.variables.sd_filename)|string %}
  {% set print_duration = printer.save_variables.variables.print_duration %}
  {% set fan_speed = printer.save_variables.variables.fan_speed %}
  {% set nozzle_temp = printer.save_variables.variables.nozzle_temp %}
  {% set bed_temp = printer.save_variables.variables.bed_temp %}
  G28
  SAVE_VARIABLE VARIABLE=plr_flag VALUE=True
  _SCREEN_LED_ON R=1 O=1 W=0
  M104 S{nozzle_temp}
  M140 S{bed_temp}
  M109 S{nozzle_temp}
  M190 S{bed_temp} 
  _SCREEN_LED_ON R=0 O=0 W=1
  {% set fan_speed = fan_speed * 255 %}
  M106 S{fan_speed}
  G90
  G92 E{e_pos}
  M83
  G1 X{x_pos} Y{y_pos} Z{z_pos}
  POWER_LOSS_RESTART_PRINT FILENAME='{last_file}' FILEPOSITION={file_position} PRINT_DURATION={print_duration}


##################################################
# Gcode Offsets Management
##################################################

[gcode_macro SET_GCODE_OFFSET]
description: Saving Gcode Offsets
rename_existing: _SET_GCODE_OFFSET
gcode:
  {% if printer.save_variables.variables.gcode_offsets %}
    {% set offsets = printer.save_variables.variables.gcode_offsets %}
  {% else %}
    {% set offsets = {'x': None,'y': None,'z': None} %}
  {% endif %}
  {% set ns = namespace(offsets={'x': offsets.x,'y': offsets.y,'z': offsets.z}) %}
  {%if 'X' in params %}{% set null = ns.offsets.update({'x': params.X}) %}{% endif %}
  {%if 'Y' in params %}{% set null = ns.offsets.update({'y': params.Y}) %}{% endif %}
  {%if 'Z' in params %}{% set null = ns.offsets.update({'z': params.Z}) %}{% endif %}
  {%if 'Z_ADJUST' in params %}
    {%if ns.offsets.z == None %}
      {% set null = ns.offsets.update({'z': 0}) %}
    {% endif %}
    {% set null = ns.offsets.update({'z': (ns.offsets.z | float) + (params.Z_ADJUST | float)}) %}
  {% endif %}
  _SET_GCODE_OFFSET {% for p in params %}{'%s=%s '% (p, params[p])}{% endfor %}
  SAVE_VARIABLE VARIABLE=gcode_offsets VALUE="{ns.offsets}"


##################################################
# Fans Control
##################################################

[gcode_macro M106]
description: Fans Control
rename_existing: M106.1
gcode:
  {% if 'S' in params %}
    {% set fan_speed = params.S|default(0)|int %}
    {% if 'P' in params and params.P == '3' %}
      {% set fan_value = fan_speed / 255.0 %}
      SET_FAN_SPEED FAN=chamber_fan SPEED={fan_value}
    {% else %}
      M106.1 S{fan_speed}
    {% endif %}
  {% else %}
    M106.1 S0
    SET_FAN_SPEED FAN=chamber_fan SPEED=0.0
  {% endif %}


##################################################
# Slicer Controls Management
##################################################

[gcode_macro M204]
description: Sets maximum acceleration
rename_existing: M204.1
gcode:
  {% if 'S' in params %}
    {% set s = params.S|float %}
    SET_VELOCITY_LIMIT ACCEL={s}
  {% else %}
    {% if 'P' in params %}
      {% set p = params.P|float %}
      {% if 'T' in params %}
        {% set t = params.T|float %}
        {% if p < t %}
          SET_VELOCITY_LIMIT ACCEL={p}
        {% else %}
          SET_VELOCITY_LIMIT ACCEL={t}
        {% endif %}
      {% else %}
        SET_VELOCITY_LIMIT ACCEL={p}
      {% endif %}
    {% elif 'T' in params %}
      {% set t = params.T|float %}
      SET_VELOCITY_LIMIT ACCEL={t}
    {% endif %}
  {% endif %}

[gcode_macro M205]
description: Sets Square Corner Velocity
gcode:
  {% if 'X' in params %}
  SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.X}
  {% elif 'Y' in params %}
  SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.Y}
  {% endif %}


##################################################
# Backup & Restore
##################################################

[gcode_shell_command Klipper_Backup]
command: sh /home/pi/flsun-os/backup-restore.sh -backup_klipper
timeout: 10.0
verbose: true

[gcode_shell_command Klipper_Restore]
command: sh /home/pi/flsun-os/backup-restore.sh -restore_klipper
timeout: 10.0
verbose: true

[gcode_shell_command Moonraker_Backup]
command: sh /home/pi/flsun-os/backup-restore.sh -backup_moonraker
timeout: 10.0
verbose: true

[gcode_shell_command Moonraker_Restore]
command: sh /home/pi/flsun-os/backup-restore.sh -restore_moonraker
timeout: 10.0
verbose: true

[gcode_macro _KLIPPER_BACKUP]
gcode:
  RUN_SHELL_COMMAND CMD=Klipper_Backup
  RESPOND TYPE=command MSG="action:prompt_end"

[gcode_macro _KLIPPER_RESTORE]
gcode:
  RUN_SHELL_COMMAND CMD=Klipper_Restore
  RESPOND TYPE=command MSG="action:prompt_end"

[gcode_macro _MOONRAKER_BACKUP]
gcode:
  RUN_SHELL_COMMAND CMD=Moonraker_Backup
  RESPOND TYPE=command MSG="action:prompt_end"

[gcode_macro _MOONRAKER_RESTORE]
gcode:
  RUN_SHELL_COMMAND CMD=Moonraker_Restore
  RESPOND TYPE=command MSG="action:prompt_end"

[gcode_macro MANAGE_KLIPPER_CONFIGURATION]
description: Backup & Restore Klipper configuration files
gcode:
  RESPOND TYPE=command MSG="action:prompt_begin Manage Klipper configuration files"
  RESPOND TYPE=command MSG="action:prompt_text What do you want to do with Klipper configuration files?"
  RESPOND TYPE=command MSG="action:prompt_text BACKUP: Create a backup of the Klipper configuration files named backup_klipper.zip."
  RESPOND TYPE=command MSG="action:prompt_text RESTORE: Restore Klipper configuration files from backup_klipper.zip file."
  RESPOND TYPE=command MSG="action:prompt_footer_button CANCEL|RESPOND TYPE=command MSG="action:prompt_end"|warning"
  RESPOND TYPE=command MSG="action:prompt_footer_button RESTORE|_KLIPPER_RESTORE|primary"
  RESPOND TYPE=command MSG="action:prompt_footer_button BACKUP|_KLIPPER_BACKUP|primary"
  RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro MANAGE_MOONRAKER_DATABASE]
description: Backup & Restore Moonraker database
gcode:
  RESPOND TYPE=command MSG="action:prompt_begin Manage Moonraker database"
  RESPOND TYPE=command MSG="action:prompt_text What do you want to do with Moonraker database?"
  RESPOND TYPE=command MSG="action:prompt_text BACKUP: Create a backup of the Moonraker database named backup_moonraker.zip."
  RESPOND TYPE=command MSG="action:prompt_text RESTORE: Restore Moonraker database from backup_moonraker.zip file."
  RESPOND TYPE=command MSG="action:prompt_footer_button CANCEL|RESPOND TYPE=command MSG="action:prompt_end"|warning"
  RESPOND TYPE=command MSG="action:prompt_footer_button RESTORE|_MOONRAKER_RESTORE|primary"
  RESPOND TYPE=command MSG="action:prompt_footer_button BACKUP|_MOONRAKER_BACKUP|primary"
  RESPOND TYPE=command MSG="action:prompt_show"


##################################################
# Misc
##################################################

[gcode_macro M117]
description: Display Message in Console
rename_existing: M117.1
gcode:
  {% if rawparams %}
    {% set escaped_msg = rawparams.split(';', 1)[0].split('\x23', 1)[0]|replace('"', '\"') %}
    SET_DISPLAY_TEXT MSG="{escaped_msg}"
    RESPOND TYPE=command MSG="{escaped_msg}"
  {% else %}
    SET_DISPLAY_TEXT
  {% endif %}

[gcode_macro RESTORE_E_CURRENT]
description: Restore Extruder Current
gcode:
  SET_TMC_CURRENT STEPPER=extruder CURRENT=1.2

[gcode_macro _SHUTDOWN]
description: Shutdown Machine
gcode:
  {action_call_remote_method("shutdown_machine")}

[delayed_gcode WAIT_COOLING]
initial_duration: 0
gcode:
  M106 S0
  UPDATE_DELAYED_GCODE ID=WAIT_COOLING DURATION=0

[delayed_gcode LOAD_BED_MESH]
initial_duration: .01
gcode:
  BED_MESH_PROFILE LOAD=default

[delayed_gcode LOAD_VARIABLES]
initial_duration: 3
gcode:
  {% if printer.save_variables.variables.gcode_offsets %}
    {% set offsets = printer.save_variables.variables.gcode_offsets %}
    _SET_GCODE_OFFSET {% for axis, offset in offsets.items() if offsets[axis] %}{ "%s=%s " % (axis, offset) }{% endfor %}
    { action_respond_info("Loaded Z-Offset from saved variables: %s mm" % (offsets.z)) }
  {% endif %}
  {% if printer.save_variables.variables.delta_calibrate %}
    SAVE_VARIABLE VARIABLE=delta_calibrate VALUE=False
    RESPOND MSG="Delta Calibration done!"
    _CALIBRATION_BED_LEVELING_2
  {% endif %}
  {% if printer.save_variables.variables.bed_mesh_calibrate %}
    SAVE_VARIABLE VARIABLE=bed_mesh_calibrate VALUE=False
    RESPOND MSG="Bed Leveling done!"
  {% endif %}
  {% if printer.save_variables.variables.shaper_calibrate %}
    SAVE_VARIABLE VARIABLE=shaper_calibrate VALUE=False
    RESPOND MSG="Resonances Calibration done!"
  {% endif %}
  {% if printer.save_variables.variables.was_interrupted %}
    RESPOND TYPE=command MSG="action:prompt_begin Power Loss Recovery"
    RESPOND TYPE=command MSG="action:prompt_text A power loss has occurred!"
    RESPOND TYPE=command MSG="action:prompt_text Do you want to resume current print?"
    RESPOND TYPE=command MSG="action:prompt_footer_button CANCEL PRINT|_CANCEL_PLR|error"
    RESPOND TYPE=command MSG="action:prompt_footer_button RESUME PRINT|RESUME_PRINT_AFTER_PLR|primary"
    RESPOND TYPE=command MSG="action:prompt_show"
  {% endif %}
  SAVE_VARIABLE VARIABLE=plr_flag VALUE=False

[gcode_macro _CANCEL_PLR]
description: Cancel Power Loss Recovery
gcode:
  RESPOND TYPE=command MSG=action:prompt_end
  SAVE_VARIABLE VARIABLE=was_interrupted VALUE=False
